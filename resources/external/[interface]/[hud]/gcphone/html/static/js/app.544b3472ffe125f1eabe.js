(self.webpackChunksrc_htmlphone=self.webpackChunksrc_htmlphone||[]).push([[2143],{9265:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ src_PhoneAPI; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(2137);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(6610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(5991);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(7757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./src/store/index.js + 10 modules\nvar store = __webpack_require__(7776);\n;// CONCATENATED MODULE: ./src/VoiceRCT.js\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar constraints = {\n  video: false,\n  audio: true\n};\n/* eslint-disable */\n\nvar VoiceRTC = /*#__PURE__*/function () {\n  function VoiceRTC(RTCConfig) {\n    (0,classCallCheck/* default */.Z)(this, VoiceRTC);\n\n    this.myPeerConnection = null;\n    this.candidates = [];\n    this.listener = {};\n    this.myCandidates = [];\n    this.audio = new Audio();\n    this.offer = null;\n    this.answer = null;\n    this.initiator = null;\n    this.RTCConfig = RTCConfig;\n  }\n\n  (0,createClass/* default */.Z)(VoiceRTC, [{\n    key: "init",\n    value: function () {\n      var _init = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.close();\n\n              case 2:\n                this.myPeerConnection = new RTCPeerConnection(this.RTCConfig);\n                _context.next = 5;\n                return navigator.mediaDevices.getUserMedia(constraints);\n\n              case 5:\n                this.stream = _context.sent;\n\n              case 6:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: "newConnection",\n    value: function newConnection() {\n      this.close();\n      this.candidates = [];\n      this.myCandidates = [];\n      this.listener = {};\n      this.offer = null;\n      this.answer = null;\n      this.initiator = null;\n      this.myPeerConnection = new RTCPeerConnection(this.RTCConfig);\n      this.myPeerConnection.onaddstream = this.onaddstream.bind(this);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      if (this.myPeerConnection !== null) {\n        this.myPeerConnection.close();\n      }\n\n      this.myPeerConnection = null;\n    }\n  }, {\n    key: "prepareCall",\n    value: function () {\n      var _prepareCall = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.init();\n\n              case 2:\n                this.newConnection();\n                this.initiator = true;\n                this.myPeerConnection.addStream(this.stream);\n                this.myPeerConnection.onicecandidate = this.onicecandidate.bind(this);\n                _context2.next = 8;\n                return this.myPeerConnection.createOffer();\n\n              case 8:\n                this.offer = _context2.sent;\n                _context2.next = 11;\n                return this.myPeerConnection.setLocalDescription(this.offer);\n\n              case 11:\n                return _context2.abrupt("return", btoa(JSON.stringify(this.offer)));\n\n              case 12:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function prepareCall() {\n        return _prepareCall.apply(this, arguments);\n      }\n\n      return prepareCall;\n    }()\n  }, {\n    key: "acceptCall",\n    value: function () {\n      var _acceptCall = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3(infoCall) {\n        var offer;\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                offer = JSON.parse(atob(infoCall.rtcOffer));\n                this.newConnection();\n                this.initiator = false;\n                _context3.next = 5;\n                return navigator.mediaDevices.getUserMedia(constraints);\n\n              case 5:\n                this.stream = _context3.sent;\n                this.myPeerConnection.onicecandidate = this.onicecandidate.bind(this);\n                this.myPeerConnection.addStream(this.stream);\n                this.offer = new RTCSessionDescription(offer);\n                _context3.next = 11;\n                return this.myPeerConnection.setRemoteDescription(this.offer);\n\n              case 11:\n                _context3.next = 13;\n                return this.myPeerConnection.createAnswer();\n\n              case 13:\n                this.answer = _context3.sent;\n                _context3.next = 16;\n                return this.myPeerConnection.setLocalDescription(this.answer);\n\n              case 16:\n                return _context3.abrupt("return", btoa(JSON.stringify(this.answer)));\n\n              case 17:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function acceptCall(_x) {\n        return _acceptCall.apply(this, arguments);\n      }\n\n      return acceptCall;\n    }()\n  }, {\n    key: "onReceiveAnswer",\n    value: function () {\n      var _onReceiveAnswer = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4(answerData) {\n        var answerObj;\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                answerObj = JSON.parse(atob(answerData));\n                this.answer = new RTCSessionDescription(answerObj);\n                _context4.next = 4;\n                return this.myPeerConnection.setRemoteDescription(this.answer);\n\n              case 4:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onReceiveAnswer(_x2) {\n        return _onReceiveAnswer.apply(this, arguments);\n      }\n\n      return onReceiveAnswer;\n    }()\n  }, {\n    key: "onicecandidate",\n    value: function onicecandidate(event) {\n      if (event.candidate !== undefined) {\n        this.myCandidates.push(event.candidate);\n\n        if (this.listener[\'onCandidate\'] !== undefined) {\n          var candidates = this.getAvailableCandidates();\n\n          var _iterator = _createForOfIteratorHelper(this.listener[\'onCandidate\']),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var func = _step.value;\n              func(candidates);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: "getAvailableCandidates",\n    value: function getAvailableCandidates() {\n      var candidates = btoa(JSON.stringify(this.myCandidates));\n      this.myCandidates = [];\n      return candidates;\n    }\n  }, {\n    key: "addIceCandidates",\n    value: function addIceCandidates(candidatesRaw) {\n      var _this = this;\n\n      if (this.myPeerConnection !== null) {\n        var candidates = JSON.parse(atob(candidatesRaw));\n        candidates.forEach(function (candidate) {\n          if (candidate !== null) {\n            _this.myPeerConnection.addIceCandidate(candidate);\n          }\n        });\n      }\n    }\n  }, {\n    key: "addEventListener",\n    value: function addEventListener(eventName, callBack) {\n      if (eventName === \'onCandidate\') {\n        if (this.listener[eventName] === undefined) {\n          this.listener[eventName] = [];\n        }\n\n        this.listener[eventName].push(callBack);\n        callBack(this.getAvailableCandidates());\n      }\n    }\n  }, {\n    key: "onaddstream",\n    value: function onaddstream(event) {\n      this.audio.srcObject = event.stream;\n      this.audio.play().then();\n    }\n  }]);\n\n  return VoiceRTC;\n}();\n/* eslint-disable */\n\n\n(0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee5() {\n  return regenerator_default().wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n        case "end":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n}))();\n\n/* harmony default export */ var VoiceRCT = (VoiceRTC);\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(538);\n// EXTERNAL MODULE: ./node_modules/howler/dist/howler.js\nvar howler = __webpack_require__(1766);\n;// CONCATENATED MODULE: ./src/emoji.json\nvar emoji_namespaceObject = JSON.parse(\'{"100":"💯","1234":"🔢","grinning":"😀","grimacing":"😬","grin":"😁","joy":"😂","rofl":"🤣","partying":"🥳","smiley":"😃","smile":"😄","sweat_smile":"😅","laughing":"😆","innocent":"😇","wink":"😉","blush":"😊","slightly_smiling_face":"🙂","upside_down_face":"🙃","relaxed":"☺️","yum":"😋","relieved":"😌","heart_eyes":"😍","smiling_face_with_three_hearts":"🥰","kissing_heart":"😘","kissing":"😗","kissing_smiling_eyes":"😙","kissing_closed_eyes":"😚","stuck_out_tongue_winking_eye":"😜","zany":"🤪","raised_eyebrow":"🤨","monocle":"🧐","stuck_out_tongue_closed_eyes":"😝","stuck_out_tongue":"😛","money_mouth_face":"🤑","nerd_face":"🤓","sunglasses":"😎","star_struck":"🤩","clown_face":"🤡","cowboy_hat_face":"🤠","hugs":"🤗","smirk":"😏","no_mouth":"😶","neutral_face":"😐","expressionless":"😑","unamused":"😒","roll_eyes":"🙄","thinking":"🤔","lying_face":"🤥","hand_over_mouth":"🤭","shushing":"🤫","symbols_over_mouth":"🤬","exploding_head":"🤯","flushed":"😳","disappointed":"😞","worried":"😟","angry":"😠","rage":"😡","pensive":"😔","confused":"😕","slightly_frowning_face":"🙁","frowning_face":"☹","persevere":"😣","confounded":"😖","tired_face":"😫","weary":"😩","pleading":"🥺","triumph":"😤","open_mouth":"😮","scream":"😱","fearful":"😨","cold_sweat":"😰","hushed":"😯","frowning":"😦","anguished":"😧","cry":"😢","disappointed_relieved":"😥","drooling_face":"🤤","sleepy":"😪","sweat":"😓","hot":"🥵","cold":"🥶","sob":"😭","dizzy_face":"😵","astonished":"😲","zipper_mouth_face":"🤐","nauseated_face":"🤢","sneezing_face":"🤧","vomiting":"🤮","mask":"😷","face_with_thermometer":"🤒","face_with_head_bandage":"🤕","woozy":"🥴","sleeping":"😴","zzz":"💤","poop":"💩","smiling_imp":"😈","imp":"👿","japanese_ogre":"👹","japanese_goblin":"👺","skull":"💀","ghost":"👻","alien":"👽","robot":"🤖","smiley_cat":"😺","smile_cat":"😸","joy_cat":"😹","heart_eyes_cat":"😻","smirk_cat":"😼","kissing_cat":"😽","scream_cat":"🙀","crying_cat_face":"😿","pouting_cat":"😾","palms_up":"🤲","raised_hands":"🙌","clap":"👏","wave":"👋","call_me_hand":"🤙","\\\\\\\\+1":"👍","-1":"👎","facepunch":"👊","fist":"✊","fist_left":"🤛","fist_right":"🤜","v":"✌","ok_hand":"👌","raised_hand":"✋","raised_back_of_hand":"🤚","open_hands":"👐","muscle":"💪","pray":"🙏","foot":"🦶","leg":"🦵","handshake":"🤝","point_up":"☝","point_up_2":"👆","point_down":"👇","point_left":"👈","point_right":"👉","fu":"🖕","raised_hand_with_fingers_splayed":"🖐","love_you":"🤟","metal":"🤘","crossed_fingers":"🤞","vulcan_salute":"🖖","writing_hand":"✍","selfie":"🤳","nail_care":"💅","lips":"👄","tooth":"🦷","tongue":"👅","ear":"👂","nose":"👃","eye":"👁","eyes":"👀","brain":"🧠","bust_in_silhouette":"👤","busts_in_silhouette":"👥","speaking_head":"🗣","baby":"👶","child":"🧒","boy":"👦","girl":"👧","adult":"🧑","man":"👨","woman":"👩","blonde_woman":"👱‍♀️","blonde_man":"👱","bearded_person":"🧔","older_adult":"🧓","older_man":"👴","older_woman":"👵","man_with_gua_pi_mao":"👲","woman_with_headscarf":"🧕","woman_with_turban":"👳‍♀️","man_with_turban":"👳","policewoman":"👮‍♀️","policeman":"👮","construction_worker_woman":"👷‍♀️","construction_worker_man":"👷","guardswoman":"💂‍♀️","guardsman":"💂","female_detective":"🕵️‍♀️","male_detective":"🕵","woman_health_worker":"👩‍⚕️","man_health_worker":"👨‍⚕️","woman_farmer":"👩‍🌾","man_farmer":"👨‍🌾","woman_cook":"👩‍🍳","man_cook":"👨‍🍳","woman_student":"👩‍🎓","man_student":"👨‍🎓","woman_singer":"👩‍🎤","man_singer":"👨‍🎤","woman_teacher":"👩‍🏫","man_teacher":"👨‍🏫","woman_factory_worker":"👩‍🏭","man_factory_worker":"👨‍🏭","woman_technologist":"👩‍💻","man_technologist":"👨‍💻","woman_office_worker":"👩‍💼","man_office_worker":"👨‍💼"}\');\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n;// CONCATENATED MODULE: ./src/PhoneAPI.js\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction PhoneAPI_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = PhoneAPI_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction PhoneAPI_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return PhoneAPI_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PhoneAPI_arrayLikeToArray(o, minLen); }\n\nfunction PhoneAPI_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\nvar keyEmoji = Object.keys(emoji_namespaceObject);\nvar USE_VOICE_RTC = false;\nvar BASE_URL = \'https://gcphone/\';\n/* eslint-disable camelcase */\n\nvar PhoneAPI = /*#__PURE__*/function () {\n  function PhoneAPI() {\n    var _this = this;\n\n    (0,classCallCheck/* default */.Z)(this, PhoneAPI);\n\n    window.addEventListener(\'message\', function (event) {\n      var eventType = event.data.event;\n\n      if (eventType !== undefined && typeof _this[\'on\' + eventType] === \'function\') {\n        _this[\'on\' + eventType](event.data);\n      } else if (event.data.show !== undefined) {\n        // Toggle phone\n        store/* default.commit */.Z.commit(\'SET_PHONE_VISIBILITY\', event.data.show);\n      }\n    });\n    this.config = null;\n    this.voiceRTC = null;\n    this.soundList = {};\n  }\n\n  (0,createClass/* default */.Z)(PhoneAPI, [{\n    key: "post",\n    value: function () {\n      var _post = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee(method, data) {\n        var _this2 = this;\n\n        var ndata;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ndata = data === undefined ? \'{}\' : JSON.stringify(data);\n                return _context.abrupt("return", axios_default().post(BASE_URL + method, ndata).then(function (response) {\n                  try {\n                    return JSON.parse(response.data);\n                  } catch (e) {\n                    return response;\n                  }\n                }).catch(function (error) {\n                  return _this2.log(error);\n                }));\n\n              case 2:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function post(_x, _x2) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: "log",\n    value: function () {\n      var _log = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var _len,\n            data,\n            _key,\n            _console,\n            _args2 = arguments;\n\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                for (_len = _args2.length, data = new Array(_len), _key = 0; _key < _len; _key++) {\n                  data[_key] = _args2[_key];\n                }\n\n                if (false) {}\n\n                return _context2.abrupt("return", this.post(\'log\', data));\n\n              case 5:\n                return _context2.abrupt("return", (_console = console).log.apply(_console, data));\n\n              case 6:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function log() {\n        return _log.apply(this, arguments);\n      }\n\n      return log;\n    }()\n  }, {\n    key: "convertEmoji",\n    value: function convertEmoji(text) {\n      var _iterator = PhoneAPI_createForOfIteratorHelper(keyEmoji),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          text = text.replace(new RegExp(":".concat(e, ":"), \'g\'), emoji_namespaceObject[e]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return text;\n    } // === Gestion des messages\n\n  }, {\n    key: "sendMessage",\n    value: function () {\n      var _sendMessage = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3(phoneNumber, message) {\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt("return", this.post(\'sendMessage\', {\n                  phoneNumber: phoneNumber,\n                  message: message\n                }));\n\n              case 1:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function sendMessage(_x3, _x4) {\n        return _sendMessage.apply(this, arguments);\n      }\n\n      return sendMessage;\n    }()\n  }, {\n    key: "deleteMessage",\n    value: function () {\n      var _deleteMessage = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4(id) {\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt("return", this.post(\'deleteMessage\', {\n                  id: id\n                }));\n\n              case 1:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deleteMessage(_x5) {\n        return _deleteMessage.apply(this, arguments);\n      }\n\n      return deleteMessage;\n    }()\n  }, {\n    key: "deleteMessagesNumber",\n    value: function () {\n      var _deleteMessagesNumber = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee5(number) {\n        return regenerator_default().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt("return", this.post(\'deleteMessageNumber\', {\n                  number: number\n                }));\n\n              case 1:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteMessagesNumber(_x6) {\n        return _deleteMessagesNumber.apply(this, arguments);\n      }\n\n      return deleteMessagesNumber;\n    }()\n  }, {\n    key: "deleteAllMessages",\n    value: function () {\n      var _deleteAllMessages = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee6() {\n        return regenerator_default().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt("return", this.post(\'deleteAllMessage\'));\n\n              case 1:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function deleteAllMessages() {\n        return _deleteAllMessages.apply(this, arguments);\n      }\n\n      return deleteAllMessages;\n    }()\n  }, {\n    key: "setMessageRead",\n    value: function () {\n      var _setMessageRead = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee7(number) {\n        return regenerator_default().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt("return", this.post(\'setReadMessageNumber\', {\n                  number: number\n                }));\n\n              case 1:\n              case "end":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setMessageRead(_x7) {\n        return _setMessageRead.apply(this, arguments);\n      }\n\n      return setMessageRead;\n    }() // === Gestion des contacts\n\n  }, {\n    key: "updateContact",\n    value: function () {\n      var _updateContact = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee8(id, display, phoneNumber) {\n        return regenerator_default().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt("return", this.post(\'updateContact\', {\n                  id: id,\n                  display: display,\n                  phoneNumber: phoneNumber\n                }));\n\n              case 1:\n              case "end":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function updateContact(_x8, _x9, _x10) {\n        return _updateContact.apply(this, arguments);\n      }\n\n      return updateContact;\n    }()\n  }, {\n    key: "addContact",\n    value: function () {\n      var _addContact = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee9(display, phoneNumber) {\n        return regenerator_default().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt("return", this.post(\'addContact\', {\n                  display: display,\n                  phoneNumber: phoneNumber\n                }));\n\n              case 1:\n              case "end":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function addContact(_x11, _x12) {\n        return _addContact.apply(this, arguments);\n      }\n\n      return addContact;\n    }()\n  }, {\n    key: "deleteContact",\n    value: function () {\n      var _deleteContact = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee10(id) {\n        return regenerator_default().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt("return", this.post(\'deleteContact\', {\n                  id: id\n                }));\n\n              case 1:\n              case "end":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function deleteContact(_x13) {\n        return _deleteContact.apply(this, arguments);\n      }\n\n      return deleteContact;\n    }() // == Gestion des appels\n\n  }, {\n    key: "appelsDeleteHistorique",\n    value: function () {\n      var _appelsDeleteHistorique = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee11(numero) {\n        return regenerator_default().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt("return", this.post(\'appelsDeleteHistorique\', {\n                  numero: numero\n                }));\n\n              case 1:\n              case "end":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function appelsDeleteHistorique(_x14) {\n        return _appelsDeleteHistorique.apply(this, arguments);\n      }\n\n      return appelsDeleteHistorique;\n    }()\n  }, {\n    key: "appelsDeleteAllHistorique",\n    value: function () {\n      var _appelsDeleteAllHistorique = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee12() {\n        return regenerator_default().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt("return", this.post(\'appelsDeleteAllHistorique\'));\n\n              case 1:\n              case "end":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function appelsDeleteAllHistorique() {\n        return _appelsDeleteAllHistorique.apply(this, arguments);\n      }\n\n      return appelsDeleteAllHistorique;\n    }() // === Autre\n\n  }, {\n    key: "closePhone",\n    value: function () {\n      var _closePhone = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee13() {\n        return regenerator_default().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt("return", this.post(\'closePhone\'));\n\n              case 1:\n              case "end":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function closePhone() {\n        return _closePhone.apply(this, arguments);\n      }\n\n      return closePhone;\n    }()\n  }, {\n    key: "setUseMouse",\n    value: function () {\n      var _setUseMouse = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee14(useMouse) {\n        return regenerator_default().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt("return", this.post(\'useMouse\', useMouse));\n\n              case 1:\n              case "end":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function setUseMouse(_x15) {\n        return _setUseMouse.apply(this, arguments);\n      }\n\n      return setUseMouse;\n    }()\n  }, {\n    key: "setGPS",\n    value: function () {\n      var _setGPS = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee15(x, y) {\n        return regenerator_default().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt("return", this.post(\'setGPS\', {\n                  x: x,\n                  y: y\n                }));\n\n              case 1:\n              case "end":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function setGPS(_x16, _x17) {\n        return _setGPS.apply(this, arguments);\n      }\n\n      return setGPS;\n    }()\n  }, {\n    key: "takePhoto",\n    value: function () {\n      var _takePhoto = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee16() {\n        var data;\n        return regenerator_default().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                store/* default.commit */.Z.commit(\'SET_TEMPO_HIDE\', true);\n                _context16.next = 3;\n                return this.post(\'takePhoto\', {\n                  url: this.config.fileUploadService_Url,\n                  field: this.config.fileUploadService_Field\n                });\n\n              case 3:\n                data = _context16.sent;\n                store/* default.commit */.Z.commit(\'SET_TEMPO_HIDE\', false);\n                return _context16.abrupt("return", data);\n\n              case 6:\n              case "end":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function takePhoto() {\n        return _takePhoto.apply(this, arguments);\n      }\n\n      return takePhoto;\n    }()\n  }, {\n    key: "getReponseText",\n    value: function () {\n      var _getReponseText = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee17(data) {\n        return regenerator_default().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (false) {}\n\n                return _context17.abrupt("return", this.post(\'reponseText\', data || {}));\n\n              case 4:\n                return _context17.abrupt("return", {\n                  text: window.prompt()\n                });\n\n              case 5:\n              case "end":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getReponseText(_x18) {\n        return _getReponseText.apply(this, arguments);\n      }\n\n      return getReponseText;\n    }()\n  }, {\n    key: "faketakePhoto",\n    value: function () {\n      var _faketakePhoto = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee18() {\n        return regenerator_default().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                return _context18.abrupt("return", this.post(\'faketakePhoto\'));\n\n              case 1:\n              case "end":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function faketakePhoto() {\n        return _faketakePhoto.apply(this, arguments);\n      }\n\n      return faketakePhoto;\n    }()\n  }, {\n    key: "callEvent",\n    value: function () {\n      var _callEvent = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee19(eventName, data) {\n        return regenerator_default().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                return _context19.abrupt("return", this.post(\'callEvent\', {\n                  eventName: eventName,\n                  data: data\n                }));\n\n              case 1:\n              case "end":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function callEvent(_x19, _x20) {\n        return _callEvent.apply(this, arguments);\n      }\n\n      return callEvent;\n    }()\n  }, {\n    key: "deleteALL",\n    value: function () {\n      var _deleteALL = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee20() {\n        return regenerator_default().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                localStorage.clear();\n                store/* default.dispatch */.Z.dispatch(\'tchatReset\');\n                store/* default.dispatch */.Z.dispatch(\'notesReset\');\n                store/* default.dispatch */.Z.dispatch(\'resetPhone\');\n                store/* default.dispatch */.Z.dispatch(\'resetMessage\');\n                store/* default.dispatch */.Z.dispatch(\'resetContact\');\n                store/* default.dispatch */.Z.dispatch(\'resetBourse\');\n                store/* default.dispatch */.Z.dispatch(\'resetAppels\');\n                return _context20.abrupt("return", this.post(\'deleteALL\'));\n\n              case 9:\n              case "end":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function deleteALL() {\n        return _deleteALL.apply(this, arguments);\n      }\n\n      return deleteALL;\n    }()\n  }, {\n    key: "getConfig",\n    value: function () {\n      var _getConfig = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee21() {\n        return regenerator_default().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (!(this.config === null)) {\n                  _context21.next = 9;\n                  break;\n                }\n\n                _context21.next = 3;\n                return axios_default().get(\'/html/static/config/config.json\').then(function (response) {\n                  return response.data;\n                });\n\n              case 3:\n                this.config = _context21.sent;\n\n                if (!(this.config.useWebRTCVocal === true)) {\n                  _context21.next = 9;\n                  break;\n                }\n\n                this.voiceRTC = new VoiceRCT(this.config.RTCConfig);\n                USE_VOICE_RTC = true;\n                _context21.next = 9;\n                return this.notififyUseRTC(this.config.useWebRTCVocal);\n\n              case 9:\n                return _context21.abrupt("return", this.config);\n\n              case 10:\n              case "end":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getConfig() {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n  }, {\n    key: "onsetEnableApp",\n    value: function () {\n      var _onsetEnableApp = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee22(data) {\n        return regenerator_default().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                store/* default.dispatch */.Z.dispatch(\'setEnableApp\', data);\n\n              case 1:\n              case "end":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function onsetEnableApp(_x21) {\n        return _onsetEnableApp.apply(this, arguments);\n      }\n\n      return onsetEnableApp;\n    }()\n  }, {\n    key: "setIgnoreFocus",\n    value: function () {\n      var _setIgnoreFocus = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee23(ignoreFocus) {\n        return regenerator_default().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return this.post(\'setIgnoreFocus\', {\n                  ignoreFocus: ignoreFocus\n                });\n\n              case 2:\n              case "end":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function setIgnoreFocus(_x22) {\n        return _setIgnoreFocus.apply(this, arguments);\n      }\n\n      return setIgnoreFocus;\n    }() // === App Tchat\n\n  }, {\n    key: "tchatGetMessagesChannel",\n    value: function () {\n      var _tchatGetMessagesChannel = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee24(channel) {\n        return regenerator_default().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this.post(\'tchat_getChannel\', {\n                  channel: channel\n                });\n\n              case 2:\n              case "end":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function tchatGetMessagesChannel(_x23) {\n        return _tchatGetMessagesChannel.apply(this, arguments);\n      }\n\n      return tchatGetMessagesChannel;\n    }()\n  }, {\n    key: "tchatSendMessage",\n    value: function () {\n      var _tchatSendMessage = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee25(channel, message) {\n        return regenerator_default().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return this.post(\'tchat_addMessage\', {\n                  channel: channel,\n                  message: message\n                });\n\n              case 2:\n              case "end":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function tchatSendMessage(_x24, _x25) {\n        return _tchatSendMessage.apply(this, arguments);\n      }\n\n      return tchatSendMessage;\n    }() // === App Notes\n\n  }, {\n    key: "notesGetMessagesChannel",\n    value: function () {\n      var _notesGetMessagesChannel = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee26(channel) {\n        return regenerator_default().wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                window.localStorage.setItem(\'gc_notas_locales\', channel);\n\n              case 1:\n              case "end":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function notesGetMessagesChannel(_x26) {\n        return _notesGetMessagesChannel.apply(this, arguments);\n      }\n\n      return notesGetMessagesChannel;\n    }()\n  }, {\n    key: "notesSendMessage",\n    value: function () {\n      var _notesSendMessage = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee27(channel, message) {\n        return regenerator_default().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return this.post(\'notes_addMessage\', {\n                  channel: channel,\n                  message: message\n                });\n\n              case 2:\n              case "end":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function notesSendMessage(_x27, _x28) {\n        return _notesSendMessage.apply(this, arguments);\n      }\n\n      return notesSendMessage;\n    }() // ==========================================================================\n    // Racing\n    // ==========================================================================\n\n  }, {\n    key: "getRaces",\n    value: function getRaces() {\n      return this.post(\'getRaces\');\n    }\n  }, {\n    key: "joinRace",\n    value: function joinRace(raceID, yourAlias) {\n      return this.post(\'joinRace\', {\n        raceID: raceID,\n        yourAlias: yourAlias\n      });\n    }\n  }, {\n    key: "createRace",\n    value: function createRace(raceInfo) {\n      return this.post(\'createRace\', {\n        raceInfo: raceInfo\n      });\n    }\n  }, {\n    key: "setRaceGPS",\n    value: function setRaceGPS(raceID) {\n      return this.post(\'racingSetGPS\', {\n        raceID: raceID\n      });\n    }\n  }, {\n    key: "startRace",\n    value: function startRace(raceID) {\n      return this.post(\'racingStartRace\', {\n        raceID: raceID\n      });\n    } // Core\n\n  }, {\n    key: "onupdateRacingActive",\n    value: function onupdateRacingActive(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingActive\', data.data);\n    }\n  }, {\n    key: "onupdateRacingStatus",\n    value: function onupdateRacingStatus(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingStatus\', data.data);\n    }\n  }, {\n    key: "onupdateRacingID",\n    value: function onupdateRacingID(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingID\', data.data);\n    }\n  }, {\n    key: "onupdateRacingRaces",\n    value: function onupdateRacingRaces() {\n      store/* default.dispatch */.Z.dispatch(\'racingGet\');\n    } // Laps\n\n  }, {\n    key: "onupdateRacingCurrentLap",\n    value: function onupdateRacingCurrentLap(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingCurrentLap\', data.data);\n    }\n  }, {\n    key: "onupdateRacingLaps",\n    value: function onupdateRacingLaps(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingTotalLaps\', data.data);\n    } // Checkpoint\n\n  }, {\n    key: "onupdateRacingCurrentCheckpoint",\n    value: function onupdateRacingCurrentCheckpoint(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingCurrentCheckpoint\', data.data);\n    }\n  }, {\n    key: "onupdateRacingCheckpoints",\n    value: function onupdateRacingCheckpoints(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingTotalCheckpoints\', data.data);\n    } // Players\n\n  }, {\n    key: "onupdateRacingCurrentPosition",\n    value: function onupdateRacingCurrentPosition(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingCurrentPosition\', data.data);\n    }\n  }, {\n    key: "onupdateRacingPlayers",\n    value: function onupdateRacingPlayers(data) {\n      store/* default.dispatch */.Z.dispatch(\'setRacingPlayers\', data.data);\n    } // ==========================================================================\n    //  Gestion des events\n    // ==========================================================================\n\n  }, {\n    key: "onupdateMyPhoneNumber",\n    value: function onupdateMyPhoneNumber(data) {\n      store/* default.commit */.Z.commit(\'SET_MY_PHONE_NUMBER\', data.myPhoneNumber);\n    }\n  }, {\n    key: "onupdateMessages",\n    value: function onupdateMessages(data) {\n      store/* default.commit */.Z.commit(\'SET_MESSAGES\', data.messages);\n    }\n  }, {\n    key: "onnewMessage",\n    value: function onnewMessage(data) {\n      store/* default.commit */.Z.commit(\'ADD_MESSAGE\', data.message);\n    }\n  }, {\n    key: "onupdateContacts",\n    value: function onupdateContacts(data) {\n      store/* default.commit */.Z.commit(\'SET_CONTACTS\', data.contacts);\n    }\n  }, {\n    key: "onhistoriqueCall",\n    value: function onhistoriqueCall(data) {\n      store/* default.commit */.Z.commit(\'SET_APPELS_HISTORIQUE\', data.historique);\n    }\n  }, {\n    key: "onupdateBankbalance",\n    value: function onupdateBankbalance(data) {\n      store/* default.commit */.Z.commit(\'SET_BANK_AMONT\', data.banking);\n    }\n  }, {\n    key: "onupdateBourse",\n    value: function onupdateBourse(data) {\n      store/* default.commit */.Z.commit(\'SET_BOURSE_INFO\', data.bourse);\n    }\n  }, {\n    key: "onupdateNotification",\n    value: function onupdateNotification(data) {\n      store/* default.commit */.Z.commit(\'SET_NOTIFICATION_SHOW\', data.active);\n    }\n  }, {\n    key: "onupdateNotificationInfo",\n    value: function onupdateNotificationInfo(data) {\n      store/* default.commit */.Z.commit(\'SET_NOTIFICATION_INFO\', data.info);\n    }\n  }, {\n    key: "onupdatePlayerID",\n    value: function onupdatePlayerID(data) {\n      store/* default.commit */.Z.commit(\'SET_PLAYER_ID\', data.id);\n    } // Call\n\n  }, {\n    key: "startCall",\n    value: function () {\n      var _startCall = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee28(numero) {\n        var extraData,\n            rtcOffer,\n            _args28 = arguments;\n        return regenerator_default().wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                extraData = _args28.length > 1 && _args28[1] !== undefined ? _args28[1] : undefined;\n\n                if (!(USE_VOICE_RTC === true)) {\n                  _context28.next = 8;\n                  break;\n                }\n\n                _context28.next = 4;\n                return this.voiceRTC.prepareCall();\n\n              case 4:\n                rtcOffer = _context28.sent;\n                return _context28.abrupt("return", this.post(\'startCall\', {\n                  numero: numero,\n                  rtcOffer: rtcOffer,\n                  extraData: extraData\n                }));\n\n              case 8:\n                return _context28.abrupt("return", this.post(\'startCall\', {\n                  numero: numero,\n                  extraData: extraData\n                }));\n\n              case 9:\n              case "end":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function startCall(_x29) {\n        return _startCall.apply(this, arguments);\n      }\n\n      return startCall;\n    }()\n  }, {\n    key: "acceptCall",\n    value: function () {\n      var _acceptCall = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee29(infoCall) {\n        var rtcAnswer;\n        return regenerator_default().wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                if (!(USE_VOICE_RTC === true)) {\n                  _context29.next = 7;\n                  break;\n                }\n\n                _context29.next = 3;\n                return this.voiceRTC.acceptCall(infoCall);\n\n              case 3:\n                rtcAnswer = _context29.sent;\n                return _context29.abrupt("return", this.post(\'acceptCall\', {\n                  infoCall: infoCall,\n                  rtcAnswer: rtcAnswer\n                }));\n\n              case 7:\n                return _context29.abrupt("return", this.post(\'acceptCall\', {\n                  infoCall: infoCall\n                }));\n\n              case 8:\n              case "end":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function acceptCall(_x30) {\n        return _acceptCall.apply(this, arguments);\n      }\n\n      return acceptCall;\n    }()\n  }, {\n    key: "rejectCall",\n    value: function () {\n      var _rejectCall = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee30(infoCall) {\n        return regenerator_default().wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                return _context30.abrupt("return", this.post(\'rejectCall\', {\n                  infoCall: infoCall\n                }));\n\n              case 1:\n              case "end":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function rejectCall(_x31) {\n        return _rejectCall.apply(this, arguments);\n      }\n\n      return rejectCall;\n    }()\n  }, {\n    key: "notififyUseRTC",\n    value: function () {\n      var _notififyUseRTC = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee31(use) {\n        return regenerator_default().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                return _context31.abrupt("return", this.post(\'notififyUseRTC\', use));\n\n              case 1:\n              case "end":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function notififyUseRTC(_x32) {\n        return _notififyUseRTC.apply(this, arguments);\n      }\n\n      return notififyUseRTC;\n    }()\n  }, {\n    key: "onwaitingCall",\n    value: function onwaitingCall(data) {\n      store/* default.commit */.Z.commit(\'SET_APPELS_INFO_IF_EMPTY\', _objectSpread(_objectSpread({}, data.infoCall), {}, {\n        initiator: data.initiator\n      }));\n    }\n  }, {\n    key: "onacceptCall",\n    value: function onacceptCall(data) {\n      var _this3 = this;\n\n      if (USE_VOICE_RTC === true) {\n        if (data.initiator === true) {\n          this.voiceRTC.onReceiveAnswer(data.infoCall.rtcAnswer);\n        }\n\n        this.voiceRTC.addEventListener(\'onCandidate\', function (candidates) {\n          _this3.post(\'onCandidates\', {\n            id: data.infoCall.id,\n            candidates: candidates\n          });\n        });\n      }\n\n      store/* default.commit */.Z.commit(\'SET_APPELS_INFO_IS_ACCEPTS\', true);\n    }\n  }, {\n    key: "oncandidatesAvailable",\n    value: function oncandidatesAvailable(data) {\n      this.voiceRTC.addIceCandidates(data.candidates);\n    }\n  }, {\n    key: "onrejectCall",\n    value: function onrejectCall() {\n      if (this.voiceRTC !== null) {\n        this.voiceRTC.close();\n      }\n\n      store/* default.commit */.Z.commit(\'SET_APPELS_INFO\', null);\n    } // Tchat Event\n\n  }, {\n    key: "ontchat_receive",\n    value: function ontchat_receive(data) {\n      store/* default.dispatch */.Z.dispatch(\'tchatAddMessage\', data);\n    }\n  }, {\n    key: "ontchat_channel",\n    value: function ontchat_channel(data) {\n      store/* default.commit */.Z.commit(\'TCHAT_SET_MESSAGES\', data);\n    } // Notes Event\n\n  }, {\n    key: "onnotes_receive",\n    value: function onnotes_receive(data) {\n      store/* default.dispatch */.Z.dispatch(\'notesAddMessage\', data);\n    }\n  }, {\n    key: "onnotes_channel",\n    value: function onnotes_channel(data) {\n      store/* default.commit */.Z.commit(\'NOTES_SET_MESSAGES\', data);\n    } // =====================\n\n  }, {\n    key: "onautoStartCall",\n    value: function onautoStartCall(data) {\n      this.startCall(data.number, data.extraData);\n    }\n  }, {\n    key: "onautoAcceptCall",\n    value: function onautoAcceptCall(data) {\n      store/* default.commit */.Z.commit(\'SET_APPELS_INFO\', data.infoCall);\n      this.acceptCall(data.infoCall);\n    } // === Twitter\n\n  }, {\n    key: "twitter_login",\n    value: function twitter_login(username, password) {\n      this.post(\'twitter_login\', {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: "twitter_changePassword",\n    value: function twitter_changePassword(username, password, newPassword) {\n      this.post(\'twitter_changePassword\', {\n        username: username,\n        password: password,\n        newPassword: newPassword\n      });\n    }\n  }, {\n    key: "twitter_createAccount",\n    value: function twitter_createAccount(username, password, avatarUrl) {\n      this.post(\'twitter_createAccount\', {\n        username: username,\n        password: password,\n        avatarUrl: avatarUrl\n      });\n    }\n  }, {\n    key: "twitter_postTweet",\n    value: function twitter_postTweet(username, password, message) {\n      this.post(\'twitter_postTweet\', {\n        username: username,\n        password: password,\n        message: message\n      });\n    }\n  }, {\n    key: "twitter_postTweetImg",\n    value: function twitter_postTweetImg(username, password, message) {\n      this.post(\'twitter_postTweetImg\', {\n        username: username,\n        password: password,\n        message: message\n      });\n    }\n  }, {\n    key: "twitter_toggleLikeTweet",\n    value: function twitter_toggleLikeTweet(username, password, tweetId) {\n      this.post(\'twitter_toggleLikeTweet\', {\n        username: username,\n        password: password,\n        tweetId: tweetId\n      });\n    }\n  }, {\n    key: "twitter_setAvatar",\n    value: function twitter_setAvatar(username, password, avatarUrl) {\n      this.post(\'twitter_setAvatarUrl\', {\n        username: username,\n        password: password,\n        avatarUrl: avatarUrl\n      });\n    }\n  }, {\n    key: "twitter_getTweets",\n    value: function twitter_getTweets(username, password) {\n      this.post(\'twitter_getTweets\', {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: "twitter_getFavoriteTweets",\n    value: function twitter_getFavoriteTweets(username, password) {\n      this.post(\'twitter_getFavoriteTweets\', {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: "ontwitter_tweets",\n    value: function ontwitter_tweets(data) {\n      store/* default.commit */.Z.commit(\'SET_TWEETS\', data);\n    }\n  }, {\n    key: "ontwitter_favoritetweets",\n    value: function ontwitter_favoritetweets(data) {\n      store/* default.commit */.Z.commit(\'SET_FAVORITE_TWEETS\', data);\n    }\n  }, {\n    key: "ontwitter_newTweet",\n    value: function ontwitter_newTweet(data) {\n      store/* default.dispatch */.Z.dispatch(\'addTweet\', data.tweet);\n    }\n  }, {\n    key: "ontwitter_setAccount",\n    value: function ontwitter_setAccount(data) {\n      store/* default.dispatch */.Z.dispatch(\'setAccount\', data);\n    }\n  }, {\n    key: "ontwitter_updateTweetLikes",\n    value: function ontwitter_updateTweetLikes(data) {\n      store/* default.commit */.Z.commit(\'UPDATE_TWEET_LIKE\', data);\n    }\n  }, {\n    key: "ontwitter_setTweetLikes",\n    value: function ontwitter_setTweetLikes(data) {\n      store/* default.commit */.Z.commit(\'UPDATE_TWEET_ISLIKE\', data);\n    }\n  }, {\n    key: "ontwitter_showError",\n    value: function ontwitter_showError(data) {\n      vue_esm/* default.notify */.Z.notify({\n        title: store/* default.getters.IntlString */.Z.getters.IntlString(data.title, \'\'),\n        message: store/* default.getters.IntlString */.Z.getters.IntlString(data.message),\n        icon: \'twitter\',\n        backgroundColor: \'#e0245e80\'\n      });\n    }\n  }, {\n    key: "ontwitter_showSuccess",\n    value: function ontwitter_showSuccess(data) {\n      vue_esm/* default.notify */.Z.notify({\n        title: store/* default.getters.IntlString */.Z.getters.IntlString(data.title, \'\'),\n        message: store/* default.getters.IntlString */.Z.getters.IntlString(data.message),\n        icon: \'twitter\'\n      });\n    }\n  }, {\n    key: "onplaySound",\n    value: function onplaySound(_ref) {\n      var sound = _ref.sound,\n          _ref$volume = _ref.volume,\n          volume = _ref$volume === void 0 ? 1 : _ref$volume;\n      var path = \'/html/static/sound/\' + sound;\n      if (!sound) return;\n\n      if (this.soundList[sound] !== undefined) {\n        this.soundList[sound].volume = volume;\n      } else {\n        this.soundList[sound] = new howler.Howl({\n          src: path,\n          volume: volume,\n          loop: true\n        });\n        this.soundList[sound].play();\n      }\n    }\n  }, {\n    key: "onsetSoundVolume",\n    value: function onsetSoundVolume(_ref2) {\n      var sound = _ref2.sound,\n          _ref2$volume = _ref2.volume,\n          volume = _ref2$volume === void 0 ? 1 : _ref2$volume;\n\n      if (this.soundList[sound] !== undefined) {\n        this.soundList[sound].volume = volume;\n      }\n    }\n  }, {\n    key: "onstopSound",\n    value: function onstopSound(_ref3) {\n      var sound = _ref3.sound;\n\n      if (this.soundList[sound] !== undefined) {\n        this.soundList[sound].pause();\n        delete this.soundList[sound];\n      }\n    }\n  }]);\n\n  return PhoneAPI;\n}();\n\nvar instance = new PhoneAPI();\n/* harmony default export */ var src_PhoneAPI = (instance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9265\n')},2004:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(538);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/App.vue?vue&type=template&id=5aab027d&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"height\":\"100vh\",\"width\":\"100vw\"},on:{\"contextmenu\":_vm.closePhone}},[(_vm.raceInfo.active)?_c('RacingHUD'):_vm._e(),_vm._v(\" \"),_c('notification'),_vm._v(\" \"),(_vm.showPhone && _vm.tempoHide === false)?_c('div',{class:{\n        'getin-phone': !_vm.notification && _vm.showPhone,\n        'getout-phone': !_vm.notification && _vm.fadeout,\n        'notin-phone': _vm.notification,\n      },style:({zoom: _vm.zoom}),on:{\"contextmenu\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"phone_wrapper\"},[(_vm.coque)?_c('div',{staticClass:\"phone_coque\",style:({backgroundImage: 'url(/html/static/img/coque/' + _vm.coque.value + ')'})}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"phone_screen\",attrs:{\"id\":\"app\"}},[_c('router-view')],1)])]):_vm._e()],1)])}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./node_modules/howler/dist/howler.js\nvar howler = __webpack_require__(1766);\n// EXTERNAL MODULE: ./src/store/index.js + 10 modules\nvar store = __webpack_require__(7776);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/App.vue?vue&type=script&lang=js&\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var Appvue_type_script_lang_js_ = ({\n  name: 'App',\n  components: {},\n  data: function data() {\n    return {\n      showPhone: false,\n      fadeout: false,\n      soundCall: null\n    };\n  },\n  computed: _objectSpread({}, (0,vuex_esm/* mapGetters */.Se)(['raceInfo', 'notification', 'notificationInfo', 'show', 'zoom', 'coque', 'sonido', 'appelsInfo', 'myPhoneNumber', 'volume', 'tempoHide'])),\n  watch: {\n    appelsInfo: function appelsInfo(newValue, oldValue) {\n      if (this.appelsInfo !== null && this.appelsInfo.is_accepts !== true) {\n        if (this.soundCall !== null) {\n          this.soundCall.pause();\n        }\n\n        var path = '/html/static/sound/Phone_Call_Sound_Effect.ogg';\n        if (!this.appelsInfo.initiator) path = '/html/static/sound/' + this.sonido.value;\n        this.soundCall = new howler.Howl({\n          src: path,\n          volume: this.volume,\n          loop: true\n        });\n        this.soundCall.play();\n      } else if (this.soundCall !== null) {\n        this.soundCall.pause();\n        this.soundCall = null;\n      }\n\n      if (newValue === null && oldValue !== null) {\n        this.$router.push({\n          name: 'home'\n        });\n        return;\n      }\n\n      if (newValue !== null) {\n        this.$router.push({\n          name: 'appels.active'\n        });\n      }\n    },\n    show: function show() {\n      if (this.appelsInfo !== null) {\n        this.$router.push({\n          name: 'appels.active'\n        });\n      } else {\n        this.$router.push({\n          name: 'home'\n        });\n      }\n\n      if (this.show === false && this.appelsInfo !== null) {\n        this.rejectCall();\n      }\n\n      if (this.show) {\n        this.fadeout = false;\n        this.showPhone = true;\n      } else {\n        this.fadeout = true;\n        this.removePhone(1000);\n      }\n\n      store/* default.commit */.Z.commit('SET_NOTIFICATION_SHOW', false);\n    },\n    notification: function notification() {\n      if (this.notification) {\n        this.showPhone = true;\n        this.removePhone(6000);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (false) {}\n\n    this.loadConfig();\n    window.addEventListener('message', function (event) {\n      if (event.data.keyUp !== undefined) {\n        _this.$bus.$emit('keyUp' + event.data.keyUp);\n      }\n    });\n    window.addEventListener('keyup', function (event) {\n      var keyValid = ['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Backspace', 'Enter'];\n\n      if (keyValid.indexOf(event.key) !== -1) {\n        _this.$bus.$emit('keyUp' + event.key);\n      }\n\n      if (event.key === 'Escape') {\n        _this.$phoneAPI.closePhone();\n      }\n    });\n  },\n  methods: _objectSpread(_objectSpread({}, (0,vuex_esm/* mapActions */.nv)(['loadConfig', 'rejectCall'])), {}, {\n    closePhone: function closePhone() {\n      this.$phoneAPI.closePhone();\n    },\n    removePhone: function removePhone(timer) {\n      var _this2 = this;\n\n      new Promise(function (resolve) {\n        setTimeout(function () {\n          if (!_this2.show) {\n            _this2.showPhone = false;\n          }\n\n          store/* default.commit */.Z.commit('SET_NOTIFICATION_SHOW', false);\n          resolve();\n        }, timer);\n      });\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/App.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_Appvue_type_script_lang_js_ = (Appvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./src/App.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  src_Appvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var App = (component.exports);\n// EXTERNAL MODULE: ./node_modules/vue-router/dist/vue-router.esm.js\nvar vue_router_esm = __webpack_require__(8345);\n;// CONCATENATED MODULE: ./src/router/index.js\n\n\n\nvar Home = function Home() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5792)]).then(__webpack_require__.bind(__webpack_require__, 5792));\n};\n\nvar Menu = function Menu() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(7830)]).then(__webpack_require__.bind(__webpack_require__, 7830));\n};\n\nvar Contacts = function Contacts() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4851), __webpack_require__.e(5006), __webpack_require__.e(4570)]).then(__webpack_require__.bind(__webpack_require__, 4570));\n};\n\nvar Contact = function Contact() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4304)]).then(__webpack_require__.bind(__webpack_require__, 4304));\n};\n\nvar MessagesList = function MessagesList() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4851), __webpack_require__.e(5006), __webpack_require__.e(7078)]).then(__webpack_require__.bind(__webpack_require__, 7078));\n};\n\nvar Messages = function Messages() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(5006), __webpack_require__.e(856)]).then(__webpack_require__.bind(__webpack_require__, 856));\n};\n\nvar MessageContactsSelect = function MessageContactsSelect() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4851), __webpack_require__.e(960)]).then(__webpack_require__.bind(__webpack_require__, 960));\n};\n\nvar Appels = function Appels() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4851), __webpack_require__.e(5006), __webpack_require__.e(4482)]).then(__webpack_require__.bind(__webpack_require__, 4482));\n};\n\nvar AppelsActive = function AppelsActive() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(888)]).then(__webpack_require__.bind(__webpack_require__, 888));\n};\n\nvar AppelsNumber = function AppelsNumber() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(9019)]).then(__webpack_require__.bind(__webpack_require__, 9019));\n};\n\nvar TchatSplashScreen = function TchatSplashScreen() {\n  return __webpack_require__.e(/* import() */ 2605).then(__webpack_require__.bind(__webpack_require__, 2605));\n};\n\nvar TchatChannel = function TchatChannel() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(6451)]).then(__webpack_require__.bind(__webpack_require__, 6451));\n};\n\nvar TchatMessage = function TchatMessage() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(8851)]).then(__webpack_require__.bind(__webpack_require__, 8851));\n};\n\nvar NotesChannel = function NotesChannel() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(2141)]).then(__webpack_require__.bind(__webpack_require__, 2141));\n};\n\nvar NotesMessage = function NotesMessage() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(5019)]).then(__webpack_require__.bind(__webpack_require__, 5019));\n};\n\nvar TwitterSpashScreen = function TwitterSpashScreen() {\n  return __webpack_require__.e(/* import() */ 9989).then(__webpack_require__.bind(__webpack_require__, 9989));\n};\n\nvar TwitterScreen = function TwitterScreen() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(6022)]).then(__webpack_require__.bind(__webpack_require__, 6022));\n};\n\nvar Parametre = function Parametre() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(4139)]).then(__webpack_require__.bind(__webpack_require__, 4139));\n};\n\nvar Bank = function Bank() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(4811)]).then(__webpack_require__.bind(__webpack_require__, 4811));\n};\n\nvar Bourse = function Bourse() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(9456)]).then(__webpack_require__.bind(__webpack_require__, 9456));\n};\n\nvar Photo = function Photo() {\n  return __webpack_require__.e(/* import() */ 2612).then(__webpack_require__.bind(__webpack_require__, 2612));\n};\n\nvar App9GAG = function App9GAG() {\n  return Promise.all(/* import() */[__webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4973)]).then(__webpack_require__.bind(__webpack_require__, 4973));\n};\n\nvar RacingScreen = function RacingScreen() {\n  return Promise.all(/* import() */[__webpack_require__.e(2662), __webpack_require__.e(2606), __webpack_require__.e(2928), __webpack_require__.e(9595), __webpack_require__.e(8630), __webpack_require__.e(5317), __webpack_require__.e(4410), __webpack_require__.e(1130)]).then(__webpack_require__.bind(__webpack_require__, 1130));\n};\n\nvue_esm/* default.use */.Z.use(vue_router_esm/* default */.Z);\n/* harmony default export */ var router = (new vue_router_esm/* default */.Z({\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home\n  }, {\n    path: '/menu',\n    name: 'menu',\n    component: Menu\n  }, {\n    path: '/contacts',\n    name: 'contacts',\n    component: Contacts\n  }, {\n    path: '/contact/:id/:number?',\n    name: 'contacts.view',\n    component: Contact\n  }, {\n    path: '/messages',\n    name: 'messages',\n    component: MessagesList\n  }, {\n    path: '/messages/select',\n    name: 'messages.selectcontact',\n    component: MessageContactsSelect\n  }, {\n    path: '/messages/:number/:display',\n    name: 'messages.view',\n    component: Messages\n  }, {\n    path: '/bourse',\n    name: 'bourse',\n    component: Bourse\n  }, {\n    path: '/bank',\n    name: 'bank',\n    component: Bank\n  }, {\n    path: '/photo',\n    name: 'photo',\n    component: Photo\n  }, {\n    path: '/paramtre',\n    name: 'parametre',\n    component: Parametre\n  }, {\n    path: '/appels',\n    name: 'appels',\n    component: Appels\n  }, {\n    path: '/appelsactive',\n    name: 'appels.active',\n    component: AppelsActive\n  }, {\n    path: '/appelsNumber',\n    name: 'appels.number',\n    component: AppelsNumber\n  }, {\n    path: '/tchatsplash',\n    name: 'tchat',\n    component: TchatSplashScreen\n  }, {\n    path: '/tchat',\n    name: 'tchat.channel',\n    component: TchatChannel\n  }, {\n    path: '/tchat/:channel',\n    name: 'tchat.channel.show',\n    component: TchatMessage\n  }, {\n    path: '/notes',\n    name: 'notes',\n    component: NotesChannel\n  }, {\n    path: '/notes/:channel',\n    name: 'notes.channel.show',\n    component: NotesMessage\n  }, {\n    path: '/twitter/splash',\n    name: 'twitter.splash',\n    component: TwitterSpashScreen\n  }, {\n    path: '/twitter/view',\n    name: 'twitter.screen',\n    component: TwitterScreen\n  }, {\n    path: '/9gag',\n    name: '9gag',\n    component: App9GAG\n  }, {\n    path: '/racing',\n    name: 'racing',\n    component: RacingScreen\n  }, {\n    path: '*',\n    redirect: '/'\n  }]\n}));\nvar originalPush = vue_router_esm/* default.prototype.push */.Z.prototype.push;\n\nvue_router_esm/* default.prototype.push */.Z.prototype.push = function push(location, onResolve, onReject) {\n  if (onResolve || onReject) return originalPush.call(this, location, onResolve, onReject);\n  return originalPush.call(this, location).catch(function (err) {\n    return err;\n  });\n};\n;// CONCATENATED MODULE: ./src/TimeAgo.js\n// Original: https://github.com/egoist/vue-timeago\n\n/* eslint-disable */\nvar MINUTE = 60;\nvar HOUR = MINUTE * 60;\nvar DAY = HOUR * 24;\nvar WEEK = DAY * 7;\nvar MONTH = DAY * 30;\nvar YEAR = DAY * 365;\n\nfunction pluralOrSingular(data, locale) {\n  if (data === 'just now') {\n    return locale;\n  }\n\n  var count = Math.round(data);\n\n  if (Array.isArray(locale)) {\n    return count > 1 ? locale[1].replace(/%s/, count) : locale[0].replace(/%s/, count);\n  }\n\n  return locale.replace(/%s/, count);\n}\n\nfunction formatTime(time) {\n  var d = new Date(time);\n  return d.toLocaleString();\n}\n\nvar defaultLocales = {\n  'fr_FR': [\"à l'instant\", [\"il y a %s seconde\", \"il y a %s secondes\"], [\"il y a %s minute\", \"il y a %s minutes\"], [\"il y a %s heure\", \"il y a %s heures\"], [\"il y a %s jour\", \"il y a %s jours\"], [\"il y a %s semaine\", \"il y a %s semaines\"], [\"il y a %s mois\", \"il y a %s mois\"], [\"il y a %s an\", \"il y a %s ans\"]]\n};\nfunction install(Vue) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? 'timeago' : _ref$name,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? 'fr_FR' : _ref$locale,\n      _ref$locales = _ref.locales,\n      locales = _ref$locales === void 0 ? defaultLocales : _ref$locales;\n\n  if (!locales || Object.keys(locales).length === 0) {\n    throw new TypeError('Expected locales to have at least one locale.');\n  }\n\n  var VueTimeago = {\n    props: {\n      since: {\n        required: true\n      },\n      locale: String,\n      maxTime: Number,\n      autoUpdate: Number,\n      format: Function\n    },\n    data: function data() {\n      return {\n        now: new Date().getTime()\n      };\n    },\n    computed: {\n      currentLocale: function currentLocale() {\n        if (Vue.prototype.$timeago) {\n          var _locale = VueTimeago.locales[VueTimeago.locale];\n\n          if (_locale) {\n            return _locale;\n          }\n        }\n\n        return locales['fr_FR'];\n      },\n      sinceTime: function sinceTime() {\n        return new Date(this.since).getTime();\n      },\n      timeForTitle: function timeForTitle() {\n        var seconds = this.now / 1000 - this.sinceTime / 1000;\n\n        if (this.maxTime && seconds > this.maxTime) {\n          return null;\n        }\n\n        return this.format ? this.format(this.sinceTime) : formatTime(this.sinceTime);\n      },\n      timeago: function timeago() {\n        var seconds = this.now / 1000 - this.sinceTime / 1000;\n\n        if (this.maxTime && seconds > this.maxTime) {\n          clearInterval(this.interval);\n          return this.format ? this.format(this.sinceTime) : formatTime(this.sinceTime);\n        }\n\n        var ret = seconds <= 5 ? pluralOrSingular('just now', this.currentLocale[0]) : seconds < MINUTE ? pluralOrSingular(seconds, this.currentLocale[1]) : seconds < HOUR ? pluralOrSingular(seconds / MINUTE, this.currentLocale[2]) : seconds < DAY ? pluralOrSingular(seconds / HOUR, this.currentLocale[3]) : seconds < WEEK ? pluralOrSingular(seconds / DAY, this.currentLocale[4]) : seconds < MONTH ? pluralOrSingular(seconds / WEEK, this.currentLocale[5]) : seconds < YEAR ? pluralOrSingular(seconds / MONTH, this.currentLocale[6]) : pluralOrSingular(seconds / YEAR, this.currentLocale[7]);\n        return ret;\n      }\n    },\n    mounted: function mounted() {\n      if (this.autoUpdate) {\n        this.update();\n      }\n    },\n    render: function render(h) {\n      return h('time', {\n        attrs: {\n          datetime: new Date(this.since),\n          title: this.timeForTitle\n        }\n      }, this.timeago);\n    },\n    watch: {\n      autoUpdate: function autoUpdate(newAutoUpdate) {\n        this.stopUpdate(); // only update when it's not falsy value\n        // which means you cans set it to 0 to disable auto-update\n\n        if (newAutoUpdate) {\n          this.update();\n        }\n      }\n    },\n    methods: {\n      update: function update() {\n        var _this = this;\n\n        var period = this.autoUpdate * 1000;\n        this.interval = setInterval(function () {\n          _this.now = new Date().getTime();\n        }, period);\n      },\n      stopUpdate: function stopUpdate() {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.stopUpdate();\n    }\n  };\n  VueTimeago.locale = 'fr_FR';\n  VueTimeago.locales = {};\n  Vue.prototype.$timeago = {\n    setCurrentLocale: function setCurrentLocale(locale) {\n      VueTimeago.locale = locale;\n    },\n    addLocale: function addLocale(locale, data) {\n      VueTimeago.locales[locale] = data;\n    }\n  };\n  Vue.component(name, VueTimeago);\n}\n// EXTERNAL MODULE: ./src/PhoneAPI.js + 2 modules\nvar PhoneAPI = __webpack_require__(9265);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/Notification/Notification.vue?vue&type=template&id=556cf455&scoped=true&\nvar Notificationvue_type_template_id_556cf455_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"notifications\"},_vm._l((_vm.list),function(notif){return _c('div',{key:notif.id,staticClass:\"notification\",style:(_vm.style(notif))},[_c('div',{staticClass:\"title\"},[(notif.icon)?_c('i',{staticClass:\"fa\",class:'fa-' + notif.icon}):_vm._e(),_vm._v(\" \"+_vm._s(notif.title)+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"message\"},[_vm._v(\"\\n      \"+_vm._s(notif.message)+\"\\n    \")])])}),0)}\nvar Notificationvue_type_template_id_556cf455_scoped_true_staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(2137);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(7757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n;// CONCATENATED MODULE: ./src/Notification/events.js\n\n/* harmony default export */ var events = (new vue_esm/* default */.Z());\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/Notification/Notification.vue?vue&type=script&lang=js&\n\n\n\n\nfunction Notificationvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction Notificationvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Notificationvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Notificationvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var Notificationvue_type_script_lang_js_ = ({\n  data: function data() {\n    return {\n      currentId: 0,\n      list: []\n    };\n  },\n  mounted: function mounted() {\n    events.$on('add', this.addItem);\n  },\n  methods: {\n    addItem: function addItem() {\n      var _arguments = arguments,\n          _this = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        var event, dataNotif, path, audio;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};\n                dataNotif = Notificationvue_type_script_lang_js_objectSpread(Notificationvue_type_script_lang_js_objectSpread({}, event), {}, {\n                  id: _this.currentId++,\n                  duration: parseInt(event.duration) || 3000\n                });\n\n                _this.list.push(dataNotif);\n\n                window.setTimeout(function () {\n                  _this.destroy(dataNotif.id);\n                }, dataNotif.duration);\n\n                if (event.sound !== null && event.sound !== undefined) {\n                  path = '/html/static/sound/' + event.sound;\n                  audio = new howler.Howl({\n                    src: path,\n                    onend: function onend() {\n                      audio.src = null;\n                    }\n                  });\n                  audio.play();\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    style: function style(notif) {\n      return {\n        backgroundColor: notif.backgroundColor\n      };\n    },\n    destroy: function destroy(id) {\n      this.list = this.list.filter(function (n) {\n        return n.id !== id;\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/Notification/Notification.vue?vue&type=script&lang=js&\n /* harmony default export */ var Notification_Notificationvue_type_script_lang_js_ = (Notificationvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/Notification/Notification.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar Notification_component = (0,componentNormalizer/* default */.Z)(\n  Notification_Notificationvue_type_script_lang_js_,\n  Notificationvue_type_template_id_556cf455_scoped_true_render,\n  Notificationvue_type_template_id_556cf455_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"556cf455\",\n  null\n  \n)\n\n/* harmony default export */ var Notification = (Notification_component.exports);\n;// CONCATENATED MODULE: ./src/Notification/index.js\n\n\n\nvar Notify = {\n  install: function install() {\n    if (this.installed) return;\n    this.installed = true;\n    vue_esm/* default.component */.Z.component('Notification', Notification);\n\n    vue_esm/* default.notify */.Z.notify = function (params) {\n      events.$emit('add', params);\n    };\n\n    Object.defineProperties(vue_esm/* default.prototype */.Z.prototype, {\n      $notify: {\n        get: function get() {\n          return vue_esm/* default.notify */.Z.notify;\n        }\n      }\n    });\n  }\n};\n/* harmony default export */ var src_Notification = (Notify);\n;// CONCATENATED MODULE: ./src/directives/autofocus.js\nvar directive = {\n  inserted: function inserted(el) {\n    el.focus();\n  }\n};\n/* harmony default export */ var autofocus = (directive);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-svg-core/index.es.js\nvar index_es = __webpack_require__(8947);\n// EXTERNAL MODULE: ./node_modules/@sentry/vue/esm/sdk.js + 33 modules\nvar sdk = __webpack_require__(3292);\n// EXTERNAL MODULE: ./node_modules/@sentry/tracing/esm/index.js + 26 modules\nvar esm = __webpack_require__(370);\n// EXTERNAL MODULE: ./node_modules/vue-units/vue-units.js\nvar vue_units = __webpack_require__(1311);\nvar vue_units_default = /*#__PURE__*/__webpack_require__.n(vue_units);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\nvar free_solid_svg_icons_index_es = __webpack_require__(1436);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/free-brands-svg-icons/index.es.js\nvar free_brands_svg_icons_index_es = __webpack_require__(1417);\n// EXTERNAL MODULE: ./node_modules/@fortawesome/vue-fontawesome/index.es.js\nvar vue_fontawesome_index_es = __webpack_require__(7810);\n;// CONCATENATED MODULE: ./src/main.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex_es/* library.add */.vI.add(free_solid_svg_icons_index_es/* faAngleLeft */.EyR, free_solid_svg_icons_index_es/* faComment */.Mzg, free_solid_svg_icons_index_es/* faLocationArrow */.$40, free_solid_svg_icons_index_es/* faUndo */.X7o, free_solid_svg_icons_index_es/* faCamera */._jT, free_solid_svg_icons_index_es/* faTrash */.$aW, free_solid_svg_icons_index_es/* faPhone */.j1w, free_solid_svg_icons_index_es/* faCircle */.diR, free_solid_svg_icons_index_es/* faSearch */.wn1, free_solid_svg_icons_index_es/* faCopy */.kZ_, free_solid_svg_icons_index_es/* faMask */.P2X, free_solid_svg_icons_index_es/* faSms */.OYP, free_solid_svg_icons_index_es/* faSave */.r6l, free_solid_svg_icons_index_es/* faPlus */.r8p, free_solid_svg_icons_index_es/* faMinus */.Kl4, free_solid_svg_icons_index_es/* faImage */.VmB, free_solid_svg_icons_index_es/* faMobile */.Z__, free_solid_svg_icons_index_es/* faBell */.qmU, free_solid_svg_icons_index_es/* faVolumeDown */.ygb, free_solid_svg_icons_index_es/* faGlobeAmericas */.Xj, free_solid_svg_icons_index_es/* faMousePointer */.kwz, free_solid_svg_icons_index_es/* faExclamationTriangle */.eHv, free_solid_svg_icons_index_es/* faExclamationCircle */.RLE, free_solid_svg_icons_index_es/* faHome */.J9Y, free_solid_svg_icons_index_es/* faHeart */.m6i, free_solid_svg_icons_index_es/* faCog */.b7W, free_solid_svg_icons_index_es/* faClock */.SZw, free_solid_svg_icons_index_es/* faStar */.Tab, free_solid_svg_icons_index_es/* faUser */.ILF, free_solid_svg_icons_index_es/* faArrowRight */.eFW, free_solid_svg_icons_index_es/* faArrowUp */.FPD, free_solid_svg_icons_index_es/* faArrowDown */.r5q, free_brands_svg_icons_index_es/* faTwitter */.mdU, free_solid_svg_icons_index_es/* faFlagCheckered */.ytF, free_solid_svg_icons_index_es/* faFlag */.RrC, free_solid_svg_icons_index_es/* faCheckCircle */.f8k, free_solid_svg_icons_index_es/* faMoneyBillAlt */.co4, free_solid_svg_icons_index_es/* faRoad */.KJ_, free_solid_svg_icons_index_es/* faMapMarker */.Mzo, free_solid_svg_icons_index_es/* faTrophy */.kWN, free_solid_svg_icons_index_es/* faRoute */.FpQ, free_solid_svg_icons_index_es/* faEye */.Mdf, free_solid_svg_icons_index_es/* faTimes */.NBC, free_solid_svg_icons_index_es/* faCheck */.LEp, free_solid_svg_icons_index_es/* faStopCircle */.oD0, free_solid_svg_icons_index_es/* faStopwatch */.U$5);\nvue_esm/* default.component */.Z.component('FontAwesomeIcon', vue_fontawesome_index_es/* FontAwesomeIcon */.GN);\nvue_esm/* default.component */.Z.component('RacingHUD', __webpack_require__(4869)/* .default */ .Z);\nvue_esm/* default.use */.Z.use(install);\nvue_esm/* default.use */.Z.use(src_Notification);\nvue_esm/* default.use */.Z.use((vue_units_default()));\nvue_esm/* default.config.productionTip */.Z.config.productionTip = false;\nvue_esm/* default.prototype.$bus */.Z.prototype.$bus = new vue_esm/* default */.Z();\nvue_esm/* default.prototype.$phoneAPI */.Z.prototype.$phoneAPI = PhoneAPI/* default */.Z;\nwindow.VueTimeago = install;\nwindow.Vue = vue_esm/* default */.Z;\nwindow.store = store/* default */.Z;\nvue_esm/* default.directive */.Z.directive('autofocus', autofocus);\nvue_esm/* default.filter */.Z.filter('toCurrency', function (value) {\n  if (typeof value !== \"number\") {\n    return value;\n  }\n\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: store/* default.getters.currency */.Z.getters.currency,\n    minimumFractionDigits: 0\n  });\n  return formatter.format(value);\n});\n/* eslint-disable no-new */\n\nwindow.APP = new vue_esm/* default */.Z({\n  el: '#app',\n  store: store/* default */.Z,\n  router: router,\n  render: function render(h) {\n    return h(App);\n  }\n});\nsdk/* init */.S({\n  Vue: vue_esm/* default */.Z,\n  environment: \"production\",\n  tracingOptions: {\n    trackComponents: true\n  },\n  dsn: \"https://bf00d4448699439faffdf9b82bce2d03@o157063.ingest.sentry.io/5692719\",\n  integrations: [new esm/* Integrations.BrowserTracing */.jK.BrowserTracing()],\n  tracesSampleRate: 1.0,\n  logErrors: \"production\" !== 'production'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2004\n")},7776:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ store; }\n});\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(538);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/logger.js\nvar logger = __webpack_require__(4266);\nvar logger_default = /*#__PURE__*/__webpack_require__.n(logger);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(2137);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(7757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./src/PhoneAPI.js + 2 modules\nvar PhoneAPI = __webpack_require__(9265);\n;// CONCATENATED MODULE: ./src/store/modules/phone.js\n\n\n\n\nvar state = {\n  show: \"production\" !== 'production',\n  notification: false,\n  notificationInfo: [],\n  tempoHide: false,\n  myPhoneNumber: '###-####',\n  myID: 0,\n  background: JSON.parse(window.localStorage['gc_background'] || null),\n  coque: JSON.parse(window.localStorage['gc_coque'] || null),\n  sonido: JSON.parse(window.localStorage['gc_sonido'] || null),\n  zoom: window.localStorage['gc_zoom'] || '100%',\n  volume: parseFloat(window.localStorage['gc_volume']) || 1,\n  mouse: window.localStorage['gc_mouse'] === 'true',\n  lang: window.localStorage['gc_language'],\n  config: {\n    currency: \"USD\",\n    reseau: 'Rewritten',\n    useFormatNumberFrance: false,\n    apps: [],\n    themeColor: '#2A56C6',\n    colors: ['#2A56C6'],\n    language: {}\n  }\n};\nPhoneAPI/* default.setUseMouse */.Z.setUseMouse(state.mouse);\nvar getters = {\n  show: function show(_ref) {\n    var _show = _ref.show;\n    return _show;\n  },\n  currency: function currency(_ref2) {\n    var config = _ref2.config;\n    return config.currency;\n  },\n  notification: function notification(_ref3) {\n    var _notification = _ref3.notification;\n    return _notification;\n  },\n  notificationInfo: function notificationInfo(_ref4) {\n    var _notificationInfo = _ref4.notificationInfo;\n    return _notificationInfo;\n  },\n  tempoHide: function tempoHide(_ref5) {\n    var _tempoHide = _ref5.tempoHide;\n    return _tempoHide;\n  },\n  myPhoneNumber: function myPhoneNumber(_ref6) {\n    var _myPhoneNumber = _ref6.myPhoneNumber;\n    return _myPhoneNumber;\n  },\n  myID: function myID(_ref7) {\n    var _myID = _ref7.myID;\n    return _myID;\n  },\n  volume: function volume(_ref8) {\n    var _volume = _ref8.volume;\n    return _volume;\n  },\n  enableTakePhoto: function enableTakePhoto(_ref9) {\n    var config = _ref9.config;\n    return config.enableTakePhoto === true;\n  },\n  background: function background(_ref10) {\n    var _background = _ref10.background,\n        config = _ref10.config;\n\n    if (_background === null) {\n      if (config.background_default !== undefined) {\n        return config.background_default;\n      }\n\n      return {\n        label: 'Oscuridad',\n        value: 'oscuridad.jpg'\n      };\n    }\n\n    return _background;\n  },\n  backgroundLabel: function backgroundLabel(state, getters) {\n    return getters.background.label;\n  },\n  backgroundURL: function backgroundURL(state, getters) {\n    if (getters.background.value.startsWith('http') === true) {\n      return getters.background.value;\n    }\n\n    return '/html/static/img/background/' + getters.background.value;\n  },\n  coque: function coque(_ref11) {\n    var _coque = _ref11.coque,\n        config = _ref11.config;\n\n    if (_coque === null) {\n      if (config && config.coque_default !== undefined) {\n        return config.coque_default;\n      }\n\n      return {\n        label: 'iPhone 12',\n        value: '12.png'\n      };\n    }\n\n    return _coque;\n  },\n  sonido: function sonido(_ref12) {\n    var _sonido = _ref12.sonido,\n        config = _ref12.config;\n\n    if (_sonido === null) {\n      if (config && config.sonido_default !== undefined) {\n        return config.sonido_default;\n      }\n\n      return {\n        label: 'Panters',\n        value: 'ring.ogg'\n      };\n    }\n\n    return _sonido;\n  },\n  coqueLabel: function coqueLabel(state, getters) {\n    return getters.coque.label;\n  },\n  sonidoLabel: function sonidoLabel(state, getters) {\n    return getters.sonido.label;\n  },\n  zoom: function zoom(_ref13) {\n    var _zoom = _ref13.zoom;\n    return _zoom;\n  },\n  useMouse: function useMouse(_ref14) {\n    var mouse = _ref14.mouse;\n    return mouse;\n  },\n  config: function config(_ref15) {\n    var _config = _ref15.config;\n    return _config;\n  },\n  warningMessageCount: function warningMessageCount(_ref16) {\n    var config = _ref16.config;\n    return config.warningMessageCount || 250;\n  },\n  useFormatNumberFrance: function useFormatNumberFrance(_ref17) {\n    var config = _ref17.config;\n    return config.useFormatNumberFrance;\n  },\n  themeColor: function themeColor(_ref18) {\n    var config = _ref18.config;\n    return config.themeColor;\n  },\n  colors: function colors(_ref19) {\n    var config = _ref19.config;\n    return config.colors;\n  },\n  Apps: function Apps(_ref20, getters) {\n    var config = _ref20.config,\n        lang = _ref20.lang;\n    return config.apps.filter(function (app) {\n      return app.enabled !== false;\n    }).map(function (app) {\n      if (app.puceRef !== undefined) {\n        app.puce = getters[app.puceRef];\n      }\n\n      var keyName = \"\".concat(lang, \"__name\");\n      app.intlName = app[keyName] || app.name;\n      return app;\n    });\n  },\n  AppsHome: function AppsHome(state, getters) {\n    return getters.Apps.filter(function (app) {\n      return app.inHomePage === true;\n    });\n  },\n  availableLanguages: function availableLanguages(_ref21) {\n    var config = _ref21.config;\n    var langKey = Object.keys(config.language);\n    var AvailableLanguage = {};\n\n    for (var _i = 0, _langKey = langKey; _i < _langKey.length; _i++) {\n      var key = _langKey[_i];\n      AvailableLanguage[config.language[key].NAME] = key;\n    }\n\n    return AvailableLanguage;\n  },\n  IntlString: function IntlString(_ref22) {\n    var config = _ref22.config,\n        lang = _ref22.lang;\n    lang = lang || config.defaultLanguage;\n\n    if (config.language[lang] === undefined) {\n      return function (LABEL) {\n        return LABEL;\n      };\n    }\n\n    return function (LABEL, defaultValue) {\n      return config.language[lang][LABEL] || defaultValue || LABEL;\n    };\n  }\n};\nvar actions = {\n  loadConfig: function loadConfig(_ref23) {\n    return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n      var commit, state, config, keyLang, _i2, _keyLang, key, timeAgoConf;\n\n      return regenerator_default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref23.commit, state = _ref23.state;\n              _context.next = 3;\n              return PhoneAPI/* default.getConfig */.Z.getConfig();\n\n            case 3:\n              config = _context.sent;\n              keyLang = Object.keys(config.language);\n\n              for (_i2 = 0, _keyLang = keyLang; _i2 < _keyLang.length; _i2++) {\n                key = _keyLang[_i2];\n                timeAgoConf = config.language[key].TIMEAGO;\n\n                if (timeAgoConf !== undefined) {\n                  vue_esm/* default.prototype.$timeago.addLocale */.Z.prototype.$timeago.addLocale(key, timeAgoConf);\n                }\n              }\n\n              vue_esm/* default.prototype.$timeago.setCurrentLocale */.Z.prototype.$timeago.setCurrentLocale(state.lang);\n\n              if (config.defaultContacts !== undefined) {\n                commit('SET_DEFAULT_CONTACTS', config.defaultContacts);\n              }\n\n              commit('SET_CONFIG', config);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  setEnableApp: function setEnableApp(_ref24, _ref25) {\n    var commit = _ref24.commit;\n    var appName = _ref25.appName,\n        _ref25$enable = _ref25.enable,\n        enable = _ref25$enable === void 0 ? true : _ref25$enable;\n    commit('SET_APP_ENABLE', {\n      appName: appName,\n      enable: enable\n    });\n  },\n  setVisibility: function setVisibility(_ref26, show) {\n    var commit = _ref26.commit;\n    commit('SET_PHONE_VISIBILITY', show);\n  },\n  setZoon: function setZoon(_ref27, zoom) {\n    var commit = _ref27.commit;\n    window.localStorage['gc_zoom'] = zoom;\n    commit('SET_ZOOM', zoom);\n  },\n  setBackground: function setBackground(_ref28, background) {\n    var commit = _ref28.commit;\n    window.localStorage['gc_background'] = JSON.stringify(background);\n    commit('SET_BACKGROUND', background);\n  },\n  setCoque: function setCoque(_ref29, coque) {\n    var commit = _ref29.commit;\n    window.localStorage['gc_coque'] = JSON.stringify(coque);\n    commit('SET_COQUE', coque);\n  },\n  setSonido: function setSonido(_ref30, sonido) {\n    var commit = _ref30.commit;\n    window.localStorage['gc_sonido'] = JSON.stringify(sonido);\n    commit('SET_SONIDO', sonido);\n  },\n  setVolume: function setVolume(_ref31, volume) {\n    var commit = _ref31.commit;\n    window.localStorage['gc_volume'] = volume;\n    commit('SET_VOLUME', volume);\n  },\n  setLanguage: function setLanguage(_ref32, lang) {\n    var commit = _ref32.commit;\n    window.localStorage['gc_language'] = lang;\n    vue_esm/* default.prototype.$timeago.setCurrentLocale */.Z.prototype.$timeago.setCurrentLocale(lang);\n    commit('SET_LANGUAGE', lang);\n  },\n  setMouseSupport: function setMouseSupport(_ref33, value) {\n    var commit = _ref33.commit;\n    window.localStorage['gc_mouse'] = value;\n    PhoneAPI/* default.setUseMouse */.Z.setUseMouse(value);\n    commit('SET_MOUSE_SUPPORT', value);\n  },\n  closePhone: function closePhone() {\n    PhoneAPI/* default.closePhone */.Z.closePhone();\n  },\n  resetPhone: function resetPhone(_ref34) {\n    var dispatch = _ref34.dispatch,\n        getters = _ref34.getters;\n    dispatch('setZoon', '100%');\n    dispatch('setVolume', 1);\n    dispatch('setBackground', getters.config.background_default);\n    dispatch('setCoque', getters.config.coque_default);\n    dispatch('setSonido', getters.config.sonido_default);\n    dispatch('setLanguage', 'fr_FR');\n  }\n};\nvar mutations = {\n  SET_CONFIG: function SET_CONFIG(state, config) {\n    state.config = config;\n  },\n  SET_APP_ENABLE: function SET_APP_ENABLE(state, _ref35) {\n    var appName = _ref35.appName,\n        enable = _ref35.enable;\n    var appIndex = state.config.apps.findIndex(function (app) {\n      return app.name === appName;\n    });\n\n    if (appIndex !== -1) {\n      vue_esm/* default.set */.Z.set(state.config.apps[appIndex], 'enabled', enable);\n    }\n  },\n  SET_PHONE_VISIBILITY: function SET_PHONE_VISIBILITY(state, show) {\n    state.show = show;\n    state.tempoHide = false;\n  },\n  SET_TEMPO_HIDE: function SET_TEMPO_HIDE(state, hide) {\n    state.tempoHide = hide;\n  },\n  SET_MY_PHONE_NUMBER: function SET_MY_PHONE_NUMBER(state, myPhoneNumber) {\n    state.myPhoneNumber = myPhoneNumber;\n  },\n  SET_BACKGROUND: function SET_BACKGROUND(state, background) {\n    state.background = background;\n  },\n  SET_COQUE: function SET_COQUE(state, coque) {\n    state.coque = coque;\n  },\n  SET_SONIDO: function SET_SONIDO(state, sonido) {\n    state.sonido = sonido;\n  },\n  SET_ZOOM: function SET_ZOOM(state, zoom) {\n    state.zoom = zoom;\n  },\n  SET_VOLUME: function SET_VOLUME(state, volume) {\n    state.volume = volume;\n  },\n  SET_LANGUAGE: function SET_LANGUAGE(state, lang) {\n    state.lang = lang;\n  },\n  SET_MOUSE_SUPPORT: function SET_MOUSE_SUPPORT(state, value) {\n    state.mouse = value;\n  },\n  SET_NOTIFICATION_SHOW: function SET_NOTIFICATION_SHOW(state, status) {\n    state.notification = status;\n  },\n  SET_NOTIFICATION_INFO: function SET_NOTIFICATION_INFO(state, data) {\n    state.notificationInfo = data;\n  },\n  SET_PLAYER_ID: function SET_PLAYER_ID(state, id) {\n    state.myID = id;\n  }\n};\n/* harmony default export */ var phone = ({\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n});\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules\nvar toConsumableArray = __webpack_require__(18);\n;// CONCATENATED MODULE: ./src/store/modules/contacts.js\n\n\nvar contacts_state = {\n  contacts: [],\n  defaultContacts: []\n};\nvar contacts_getters = {\n  contacts: function contacts(_ref) {\n    var _contacts = _ref.contacts,\n        defaultContacts = _ref.defaultContacts;\n    return [].concat((0,toConsumableArray/* default */.Z)(_contacts), (0,toConsumableArray/* default */.Z)(defaultContacts));\n  }\n};\nvar contacts_actions = {\n  updateContact: function updateContact(context, _ref2) {\n    var id = _ref2.id,\n        display = _ref2.display,\n        number = _ref2.number;\n    PhoneAPI/* default.updateContact */.Z.updateContact(id, display, number);\n  },\n  addContact: function addContact(context, _ref3) {\n    var display = _ref3.display,\n        number = _ref3.number;\n    PhoneAPI/* default.addContact */.Z.addContact(display, number);\n  },\n  deleteContact: function deleteContact(context, _ref4) {\n    var id = _ref4.id;\n    PhoneAPI/* default.deleteContact */.Z.deleteContact(id);\n  },\n  resetContact: function resetContact(_ref5) {\n    var commit = _ref5.commit;\n    commit('SET_CONTACTS', []);\n  }\n};\nvar contacts_mutations = {\n  SET_CONTACTS: function SET_CONTACTS(state, contacts) {\n    state.contacts = contacts.sort(function (a, b) {\n      return a.display.localeCompare(b.display);\n    });\n  },\n  SET_DEFAULT_CONTACTS: function SET_DEFAULT_CONTACTS(state, contacts) {\n    state.defaultContacts = contacts;\n  }\n};\n/* harmony default export */ var contacts = ({\n  state: contacts_state,\n  getters: contacts_getters,\n  actions: contacts_actions,\n  mutations: contacts_mutations\n});\n\nif (false) {}\n;// CONCATENATED MODULE: ./src/store/modules/messages.js\n\nvar messages_state = {\n  messages: []\n};\nvar messages_getters = {\n  messages: function messages(_ref) {\n    var _messages = _ref.messages;\n    return _messages;\n  },\n  nbMessagesUnread: function nbMessagesUnread(_ref2) {\n    var messages = _ref2.messages;\n    return messages.filter(function (e) {\n      return e.isRead !== 1;\n    }).length;\n  }\n};\nvar messages_actions = {\n  setMessages: function setMessages(_ref3, messages) {\n    var commit = _ref3.commit;\n    commit('SET_MESSAGES', messages);\n  },\n  // eslint-disable-next-line no-unused-vars\n  sendMessage: function sendMessage(_ref4, _ref5) {\n    var commit = _ref4.commit;\n    var phoneNumber = _ref5.phoneNumber,\n        message = _ref5.message;\n    PhoneAPI/* default.sendMessage */.Z.sendMessage(phoneNumber, message);\n  },\n  // eslint-disable-next-line no-unused-vars\n  deleteMessage: function deleteMessage(_ref6, _ref7) {\n    var commit = _ref6.commit;\n    var id = _ref7.id;\n    PhoneAPI/* default.deleteMessage */.Z.deleteMessage(id);\n  },\n  deleteMessagesNumber: function deleteMessagesNumber(_ref8, _ref9) {\n    var commit = _ref8.commit,\n        state = _ref8.state;\n    var num = _ref9.num;\n    PhoneAPI/* default.deleteMessagesNumber */.Z.deleteMessagesNumber(num);\n    commit('SET_MESSAGES', state.messages.filter(function (mess) {\n      return mess.transmitter !== num;\n    }));\n  },\n  deleteAllMessages: function deleteAllMessages(_ref10) {\n    var commit = _ref10.commit;\n    PhoneAPI/* default.deleteAllMessages */.Z.deleteAllMessages();\n    commit('SET_MESSAGES', []);\n  },\n  setMessageRead: function setMessageRead(_ref11, num) {\n    var commit = _ref11.commit;\n    PhoneAPI/* default.setMessageRead */.Z.setMessageRead(num);\n    commit('SET_MESSAGES_READ', {\n      num: num\n    });\n  },\n  resetMessage: function resetMessage(_ref12) {\n    var commit = _ref12.commit;\n    commit('SET_MESSAGES', []);\n  }\n};\nvar messages_mutations = {\n  SET_MESSAGES: function SET_MESSAGES(state, messages) {\n    state.messages = messages;\n  },\n  ADD_MESSAGE: function ADD_MESSAGE(state, message) {\n    state.messages.push(message);\n  },\n  SET_MESSAGES_READ: function SET_MESSAGES_READ(state, _ref13) {\n    var num = _ref13.num;\n\n    for (var i = 0; i < state.messages.length; i += 1) {\n      if (state.messages[i].transmitter === num && state.messages[i].isRead !== 1) {\n        state.messages[i].isRead = 1;\n      }\n    }\n  }\n};\n/* harmony default export */ var messages = ({\n  state: messages_state,\n  getters: messages_getters,\n  actions: messages_actions,\n  mutations: messages_mutations\n});\n\nif (false) { var numRandom, time; }\n;// CONCATENATED MODULE: ./src/store/modules/appels.js\n\nvar appels_state = {\n  appelsHistorique: [],\n  appelsInfo: null\n};\nvar appels_getters = {\n  appelsHistorique: function appelsHistorique(_ref) {\n    var _appelsHistorique = _ref.appelsHistorique;\n    return _appelsHistorique;\n  },\n  appelsInfo: function appelsInfo(_ref2) {\n    var _appelsInfo = _ref2.appelsInfo;\n    return _appelsInfo;\n  },\n  appelsDisplayName: function appelsDisplayName(state, getters) {\n    if (state.appelsInfo === null) {\n      return 'ERROR';\n    }\n\n    if (state.appelsInfo.hidden === true) {\n      return getters.IntlString('APP_PHONE_NUMBER_HIDDEN');\n    }\n\n    var num = String(getters.appelsDisplayNumber);\n    var contact = getters.contacts.find(function (e) {\n      return e.number === num;\n    }) || {};\n    return contact.display || getters.IntlString('APP_PHONE_NUMBER_UNKNOWN');\n  },\n  appelsDisplayNumber: function appelsDisplayNumber(state, getters) {\n    if (state.appelsInfo === null) {\n      return 'ERROR';\n    }\n\n    if (getters.isInitiatorCall === true) {\n      return state.appelsInfo.receiver_num;\n    }\n\n    if (state.appelsInfo.hidden === true) {\n      return '###-####';\n    }\n\n    return state.appelsInfo.transmitter_num;\n  },\n  isInitiatorCall: function isInitiatorCall(state) {\n    if (state.appelsInfo === null) {\n      return false;\n    }\n\n    return state.appelsInfo.initiator === true;\n  }\n};\nvar appels_actions = {\n  // eslint-disable-next-line no-unused-vars\n  startCall: function startCall(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var numero = _ref4.numero;\n    PhoneAPI/* default.startCall */.Z.startCall(numero);\n  },\n  acceptCall: function acceptCall(_ref5) {\n    var state = _ref5.state;\n    PhoneAPI/* default.acceptCall */.Z.acceptCall(state.appelsInfo);\n  },\n  rejectCall: function rejectCall(_ref6) {\n    var state = _ref6.state;\n    PhoneAPI/* default.rejectCall */.Z.rejectCall(state.appelsInfo);\n  },\n  ignoreCall: function ignoreCall(_ref7) {\n    var commit = _ref7.commit;\n    commit('SET_APPELS_INFO', null); // PhoneAPI.ignoreCall(state.appelsInfo)\n  },\n  appelsDeleteHistorique: function appelsDeleteHistorique(_ref8, _ref9) {\n    var commit = _ref8.commit,\n        state = _ref8.state;\n    var numero = _ref9.numero;\n    PhoneAPI/* default.appelsDeleteHistorique */.Z.appelsDeleteHistorique(numero);\n    commit('SET_APPELS_HISTORIQUE', state.appelsHistorique.filter(function (h) {\n      return h.num !== numero;\n    }));\n  },\n  appelsDeleteAllHistorique: function appelsDeleteAllHistorique(_ref10) {\n    var commit = _ref10.commit;\n    PhoneAPI/* default.appelsDeleteAllHistorique */.Z.appelsDeleteAllHistorique();\n    commit('SET_APPELS_HISTORIQUE', []);\n  },\n  resetAppels: function resetAppels(_ref11) {\n    var commit = _ref11.commit;\n    commit('SET_APPELS_HISTORIQUE', []);\n    commit('SET_APPELS_INFO', null);\n  }\n};\nvar appels_mutations = {\n  SET_APPELS_HISTORIQUE: function SET_APPELS_HISTORIQUE(state, appelsHistorique) {\n    state.appelsHistorique = appelsHistorique;\n  },\n  SET_APPELS_INFO_IF_EMPTY: function SET_APPELS_INFO_IF_EMPTY(state, appelsInfo) {\n    if (state.appelsInfo === null) {\n      state.appelsInfo = appelsInfo;\n    }\n  },\n  SET_APPELS_INFO: function SET_APPELS_INFO(state, appelsInfo) {\n    state.appelsInfo = appelsInfo;\n  },\n  SET_APPELS_INFO_IS_ACCEPTS: function SET_APPELS_INFO_IS_ACCEPTS(state, isAccepts) {\n    if (state.appelsInfo !== null) {\n      state.appelsInfo = Object.assign({}, state.appelsInfo, {\n        is_accepts: isAccepts\n      });\n    }\n  }\n};\n/* harmony default export */ var appels = ({\n  state: appels_state,\n  getters: appels_getters,\n  actions: appels_actions,\n  mutations: appels_mutations\n});\n\nif (false) {}\n;// CONCATENATED MODULE: ./src/store/modules/bank.js\n\nvar bank_state = {\n  bankAmont: '0'\n};\nvar bank_getters = {\n  bankAmont: function bankAmont(_ref) {\n    var _bankAmont = _ref.bankAmont;\n    return _bankAmont;\n  }\n};\nvar bank_actions = {\n  // eslint-disable-next-line no-unused-vars\n  sendpara: function sendpara(_ref2, _ref3) {\n    var state = _ref2.state;\n    var id = _ref3.id,\n        amount = _ref3.amount;\n    PhoneAPI/* default.callEvent */.Z.callEvent('gcphone:bankTransfer', {\n      id: id,\n      amount: amount\n    });\n  }\n};\nvar bank_mutations = {\n  SET_BANK_AMONT: function SET_BANK_AMONT(state, bankAmont) {\n    state.bankAmont = bankAmont;\n  }\n};\n/* harmony default export */ var bank = ({\n  state: bank_state,\n  getters: bank_getters,\n  actions: bank_actions,\n  mutations: bank_mutations\n});\n// EXTERNAL MODULE: ./node_modules/howler/dist/howler.js\nvar howler = __webpack_require__(1766);\n;// CONCATENATED MODULE: ./src/store/modules/notes.js\n\nvar LOCAL_NAME = 'gc_notes_channels';\n\nvar NotesAudio = null;\nvar notes_state = {\n  channels: JSON.parse(localStorage[LOCAL_NAME] || null) || [],\n  currentChannel: null,\n  messagesChannel: []\n};\nvar notes_getters = {\n  notesChannels: function notesChannels(_ref) {\n    var channels = _ref.channels;\n    return channels;\n  },\n  notesCurrentChannel: function notesCurrentChannel(_ref2) {\n    var currentChannel = _ref2.currentChannel;\n    return currentChannel;\n  },\n  notesMessages: function notesMessages(_ref3) {\n    var messagesChannel = _ref3.messagesChannel;\n    return messagesChannel;\n  }\n};\nvar notes_actions = {\n  notesReset: function notesReset(_ref4) {\n    var commit = _ref4.commit;\n    commit('NOTES_SET_MESSAGES', {\n      messages: []\n    });\n    commit('NOTES_SET_CHANNEL', {\n      channel: null\n    });\n    commit('NOTES_REMOVES_ALL_CHANNELS');\n  },\n  notesSetChannel: function notesSetChannel(_ref5, _ref6) {\n    var state = _ref5.state,\n        commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    var channel = _ref6.channel;\n\n    if (state.currentChannel !== channel) {\n      commit('NOTES_SET_MESSAGES', {\n        messages: []\n      });\n      commit('NOTES_SET_CHANNEL', {\n        channel: channel\n      });\n      dispatch('notesGetMessagesChannel', {\n        channel: channel\n      });\n    }\n  },\n  notesAddMessage: function notesAddMessage(_ref7, _ref8) {\n    var state = _ref7.state,\n        commit = _ref7.commit,\n        getters = _ref7.getters;\n    var message = _ref8.message;\n    var channel = message.channel;\n\n    if (state.channels.find(function (e) {\n      return e.channel === channel;\n    }) !== undefined) {\n      if (NotesAudio !== null) {\n        NotesAudio.pause();\n        NotesAudio = null;\n      }\n\n      NotesAudio = new howler.Howl({\n        src: '/html/static/sound/tchatNotification.ogg',\n        volume: getters.volume\n      });\n      NotesAudio.play();\n    }\n\n    commit('NOTES_ADD_MESSAGES', {\n      message: message\n    });\n  },\n  notesAddChannel: function notesAddChannel(_ref9, _ref10) {\n    var commit = _ref9.commit;\n    var channel = _ref10.channel;\n    commit('NOTES_ADD_CHANNELS', {\n      channel: channel\n    });\n  },\n  notesRemoveChannel: function notesRemoveChannel(_ref11, _ref12) {\n    var commit = _ref11.commit;\n    var channel = _ref12.channel;\n    commit('NOTES_REMOVES_CHANNELS', {\n      channel: channel\n    });\n  },\n  // eslint-disable-next-line no-unused-vars\n  notesGetMessagesChannel: function notesGetMessagesChannel(_ref13, _ref14) {\n    var commit = _ref13.commit;\n    var channel = _ref14.channel;\n    PhoneAPI/* default.notesGetMessagesChannel */.Z.notesGetMessagesChannel(channel);\n  },\n  notesSendMessage: function notesSendMessage(state, _ref15) {\n    var channel = _ref15.channel,\n        message = _ref15.message;\n    PhoneAPI/* default.notesSendMessage */.Z.notesSendMessage(channel, message);\n  }\n};\nvar notes_mutations = {\n  NOTES_SET_CHANNEL: function NOTES_SET_CHANNEL(state, _ref16) {\n    var channel = _ref16.channel;\n    state.currentChannel = channel;\n  },\n  NOTES_ADD_CHANNELS: function NOTES_ADD_CHANNELS(state, _ref17) {\n    var channel = _ref17.channel;\n    state.channels.push({\n      channel: channel\n    });\n    localStorage[LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  NOTES_REMOVES_CHANNELS: function NOTES_REMOVES_CHANNELS(state, _ref18) {\n    var channel = _ref18.channel;\n    state.channels = state.channels.filter(function (c) {\n      return c.channel !== channel;\n    });\n    localStorage[LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  NOTES_REMOVES_ALL_CHANNELS: function NOTES_REMOVES_ALL_CHANNELS(state) {\n    state.channels = [];\n    localStorage[LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  NOTES_ADD_MESSAGES: function NOTES_ADD_MESSAGES(state, _ref19) {\n    var message = _ref19.message;\n\n    if (message.channel === state.currentChannel) {\n      state.messagesChannel.push(message);\n    }\n  },\n  NOTES_SET_MESSAGES: function NOTES_SET_MESSAGES(state, _ref20) {\n    var messages = _ref20.messages;\n    state.messagesChannel = messages;\n  }\n};\n/* harmony default export */ var notes = ({\n  state: notes_state,\n  getters: notes_getters,\n  actions: notes_actions,\n  mutations: notes_mutations\n});\n\nif (false) { var i; }\n;// CONCATENATED MODULE: ./src/store/modules/bourse.js\nvar bourse_state = {\n  bourseInfo: []\n};\nvar bourse_getters = {\n  bourseInfo: function bourseInfo(_ref) {\n    var _bourseInfo = _ref.bourseInfo;\n    return _bourseInfo;\n  }\n};\nvar bourse_actions = {\n  resetBourse: function resetBourse(_ref2) {\n    var commit = _ref2.commit;\n    commit('SET_BOURSE_INFO', []);\n  }\n};\nvar bourse_mutations = {\n  SET_BOURSE_INFO: function SET_BOURSE_INFO(state, bourseInfo) {\n    state.bourseInfo = bourseInfo;\n  }\n};\n/* harmony default export */ var bourse = ({\n  state: bourse_state,\n  getters: bourse_getters,\n  actions: bourse_actions,\n  mutations: bourse_mutations\n});\n\nif (false) {}\n;// CONCATENATED MODULE: ./src/store/modules/tchat.js\n\nvar tchat_LOCAL_NAME = 'gc_tchat_channels';\n\nvar TchatAudio = null;\nvar tchat_state = {\n  channels: JSON.parse(localStorage[tchat_LOCAL_NAME] || null) || [],\n  currentChannel: null,\n  messagesChannel: []\n};\nvar tchat_getters = {\n  tchatChannels: function tchatChannels(_ref) {\n    var channels = _ref.channels;\n    return channels;\n  },\n  tchatCurrentChannel: function tchatCurrentChannel(_ref2) {\n    var currentChannel = _ref2.currentChannel;\n    return currentChannel;\n  },\n  tchatMessages: function tchatMessages(_ref3) {\n    var messagesChannel = _ref3.messagesChannel;\n    return messagesChannel;\n  }\n};\nvar tchat_actions = {\n  tchatReset: function tchatReset(_ref4) {\n    var commit = _ref4.commit;\n    commit('TCHAT_SET_MESSAGES', {\n      messages: []\n    });\n    commit('TCHAT_SET_CHANNEL', {\n      channel: null\n    });\n    commit('TCHAT_REMOVES_ALL_CHANNELS');\n  },\n  tchatSetChannel: function tchatSetChannel(_ref5, _ref6) {\n    var state = _ref5.state,\n        commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    var channel = _ref6.channel;\n\n    if (state.currentChannel !== channel) {\n      commit('TCHAT_SET_MESSAGES', {\n        messages: []\n      });\n      commit('TCHAT_SET_CHANNEL', {\n        channel: channel\n      });\n      dispatch('tchatGetMessagesChannel', {\n        channel: channel\n      });\n    }\n  },\n  tchatAddMessage: function tchatAddMessage(_ref7, _ref8) {\n    var state = _ref7.state,\n        commit = _ref7.commit,\n        getters = _ref7.getters;\n    var message = _ref8.message;\n    var channel = message.channel;\n\n    if (state.channels.find(function (e) {\n      return e.channel === channel;\n    }) !== undefined) {\n      if (TchatAudio !== null) {\n        TchatAudio.pause();\n        TchatAudio = null;\n      }\n\n      TchatAudio = new howler.Howl({\n        src: '/html/static/sound/tchatNotification.ogg',\n        volume: getters.volume\n      });\n      TchatAudio.play();\n    }\n\n    commit('TCHAT_ADD_MESSAGES', {\n      message: message\n    });\n  },\n  tchatAddChannel: function tchatAddChannel(_ref9, _ref10) {\n    var commit = _ref9.commit;\n    var channel = _ref10.channel;\n    commit('TCHAT_ADD_CHANNELS', {\n      channel: channel\n    });\n  },\n  tchatRemoveChannel: function tchatRemoveChannel(_ref11, _ref12) {\n    var commit = _ref11.commit;\n    var channel = _ref12.channel;\n    commit('TCHAT_REMOVES_CHANNELS', {\n      channel: channel\n    });\n  },\n  // eslint-disable-next-line no-unused-vars\n  tchatGetMessagesChannel: function tchatGetMessagesChannel(_ref13, _ref14) {\n    var commit = _ref13.commit;\n    var channel = _ref14.channel;\n    PhoneAPI/* default.tchatGetMessagesChannel */.Z.tchatGetMessagesChannel(channel);\n  },\n  tchatSendMessage: function tchatSendMessage(state, _ref15) {\n    var channel = _ref15.channel,\n        message = _ref15.message;\n    PhoneAPI/* default.tchatSendMessage */.Z.tchatSendMessage(channel, message);\n  }\n};\nvar tchat_mutations = {\n  TCHAT_SET_CHANNEL: function TCHAT_SET_CHANNEL(state, _ref16) {\n    var channel = _ref16.channel;\n    state.currentChannel = channel;\n  },\n  TCHAT_ADD_CHANNELS: function TCHAT_ADD_CHANNELS(state, _ref17) {\n    var channel = _ref17.channel;\n    state.channels.push({\n      channel: channel\n    });\n    localStorage[tchat_LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  TCHAT_REMOVES_CHANNELS: function TCHAT_REMOVES_CHANNELS(state, _ref18) {\n    var channel = _ref18.channel;\n    state.channels = state.channels.filter(function (c) {\n      return c.channel !== channel;\n    });\n    localStorage[tchat_LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  TCHAT_REMOVES_ALL_CHANNELS: function TCHAT_REMOVES_ALL_CHANNELS(state) {\n    state.channels = [];\n    localStorage[tchat_LOCAL_NAME] = JSON.stringify(state.channels);\n  },\n  TCHAT_ADD_MESSAGES: function TCHAT_ADD_MESSAGES(state, _ref19) {\n    var message = _ref19.message;\n\n    if (message.channel === state.currentChannel) {\n      state.messagesChannel.push(message);\n    }\n  },\n  TCHAT_SET_MESSAGES: function TCHAT_SET_MESSAGES(state, _ref20) {\n    var messages = _ref20.messages;\n    state.messagesChannel = messages;\n  }\n};\n/* harmony default export */ var tchat = ({\n  state: tchat_state,\n  getters: tchat_getters,\n  actions: tchat_actions,\n  mutations: tchat_mutations\n});\n\nif (false) { var tchat_i; }\n;// CONCATENATED MODULE: ./src/store/modules/twitter.js\n\n\n\nvar twitter_state = {\n  twitterUsername: localStorage['gcphone_twitter_username'],\n  twitterPassword: localStorage['gcphone_twitter_password'],\n  twitterAvatarUrl: localStorage['gcphone_twitter_avatarUrl'],\n  twitterNotification: localStorage['gcphone_twitter_notif'] ? parseInt(localStorage['gcphone_twitter_notif']) : 1,\n  twitterNotificationSound: localStorage['gcphone_twitter_notif_sound'] !== 'false',\n  tweets: [],\n  favoriteTweets: []\n};\nvar twitter_getters = {\n  twitterUsername: function twitterUsername(_ref) {\n    var _twitterUsername = _ref.twitterUsername;\n    return _twitterUsername;\n  },\n  twitterPassword: function twitterPassword(_ref2) {\n    var _twitterPassword = _ref2.twitterPassword;\n    return _twitterPassword;\n  },\n  twitterAvatarUrl: function twitterAvatarUrl(_ref3) {\n    var _twitterAvatarUrl = _ref3.twitterAvatarUrl;\n    return _twitterAvatarUrl;\n  },\n  twitterNotification: function twitterNotification(_ref4) {\n    var _twitterNotification = _ref4.twitterNotification;\n    return _twitterNotification;\n  },\n  twitterNotificationSound: function twitterNotificationSound(_ref5) {\n    var _twitterNotificationSound = _ref5.twitterNotificationSound;\n    return _twitterNotificationSound;\n  },\n  tweets: function tweets(_ref6) {\n    var _tweets = _ref6.tweets;\n    return _tweets;\n  },\n  favoriteTweets: function favoriteTweets(_ref7) {\n    var _favoriteTweets = _ref7.favoriteTweets;\n    return _favoriteTweets;\n  }\n};\nvar twitter_actions = {\n  twitterCreateNewAccount: function twitterCreateNewAccount(_, _ref8) {\n    var username = _ref8.username,\n        password = _ref8.password,\n        avatarUrl = _ref8.avatarUrl;\n    PhoneAPI/* default.twitter_createAccount */.Z.twitter_createAccount(username, password, avatarUrl);\n  },\n  // eslint-disable-next-line no-unused-vars\n  twitterLogin: function twitterLogin(_ref9, _ref10) {\n    var commit = _ref9.commit;\n    var username = _ref10.username,\n        password = _ref10.password;\n    PhoneAPI/* default.twitter_login */.Z.twitter_login(username, password);\n  },\n  twitterChangePassword: function twitterChangePassword(_ref11, newPassword) {\n    var state = _ref11.state;\n    PhoneAPI/* default.twitter_changePassword */.Z.twitter_changePassword(state.twitterUsername, state.twitterPassword, newPassword);\n  },\n  twitterLogout: function twitterLogout(_ref12) {\n    var commit = _ref12.commit;\n    localStorage.removeItem('gcphone_twitter_username');\n    localStorage.removeItem('gcphone_twitter_password');\n    localStorage.removeItem('gcphone_twitter_avatarUrl');\n    commit('UPDATE_ACCOUNT', {\n      username: undefined,\n      password: undefined,\n      avatarUrl: undefined\n    });\n  },\n  twitterSetAvatar: function twitterSetAvatar(_ref13, _ref14) {\n    var state = _ref13.state;\n    var avatarUrl = _ref14.avatarUrl;\n    PhoneAPI/* default.twitter_setAvatar */.Z.twitter_setAvatar(state.twitterUsername, state.twitterPassword, avatarUrl);\n  },\n  twitterPostTweet: function twitterPostTweet(_ref15, _ref16) {\n    var state = _ref15.state;\n    var message = _ref16.message;\n\n    if (/^https?:\\/\\/.*\\.(png|jpg|jpeg|gif)$/.test(message)) {\n      PhoneAPI/* default.twitter_postTweetImg */.Z.twitter_postTweetImg(state.twitterUsername, state.twitterPassword, message);\n    } else {\n      PhoneAPI/* default.twitter_postTweet */.Z.twitter_postTweet(state.twitterUsername, state.twitterPassword, PhoneAPI/* default.convertEmoji */.Z.convertEmoji(message));\n    }\n  },\n  twitterToogleLike: function twitterToogleLike(_ref17, _ref18) {\n    var state = _ref17.state;\n    var tweetId = _ref18.tweetId;\n    PhoneAPI/* default.twitter_toggleLikeTweet */.Z.twitter_toggleLikeTweet(state.twitterUsername, state.twitterPassword, tweetId);\n  },\n  setAccount: function setAccount(_ref19, data) {\n    var commit = _ref19.commit;\n    localStorage['gcphone_twitter_username'] = data.username;\n    localStorage['gcphone_twitter_password'] = data.password;\n    localStorage['gcphone_twitter_avatarUrl'] = data.avatarUrl;\n    commit('UPDATE_ACCOUNT', data);\n  },\n  addTweet: function addTweet(_ref20, tweet) {\n    var commit = _ref20.commit,\n        state = _ref20.state;\n    var notif = state.twitterNotification === 2;\n\n    if (state.twitterNotification === 1 && tweet.message && state.twitterUsername) {\n      notif = tweet.message && tweet.message.toLowerCase().indexOf(state.twitterUsername.toLowerCase()) !== -1;\n    }\n\n    if (notif === true) {\n      vue_esm/* default.notify */.Z.notify({\n        message: tweet.message,\n        title: tweet.author + ' :',\n        icon: 'twitter',\n        sound: state.twitterNotificationSound ? 'Twitter_Sound_Effect.ogg' : undefined\n      });\n    }\n\n    commit('ADD_TWEET', {\n      tweet: tweet\n    });\n  },\n  fetchTweets: function fetchTweets(_ref21) {\n    var state = _ref21.state;\n    PhoneAPI/* default.twitter_getTweets */.Z.twitter_getTweets(state.twitterUsername, state.twitterPassword);\n  },\n  fetchFavoriteTweets: function fetchFavoriteTweets(_ref22) {\n    var state = _ref22.state;\n    PhoneAPI/* default.twitter_getFavoriteTweets */.Z.twitter_getFavoriteTweets(state.twitterUsername, state.twitterPassword);\n  },\n  setTwitterNotification: function setTwitterNotification(_ref23, value) {\n    var commit = _ref23.commit;\n    localStorage['gcphone_twitter_notif'] = value;\n    commit('SET_TWITTER_NOTIFICATION', {\n      notification: value\n    });\n  },\n  setTwitterNotificationSound: function setTwitterNotificationSound(_ref24, value) {\n    var commit = _ref24.commit;\n    localStorage['gcphone_twitter_notif_sound'] = value;\n    commit('SET_TWITTER_NOTIFICATION_SOUND', {\n      notificationSound: value\n    });\n  }\n};\nvar twitter_mutations = {\n  SET_TWITTER_NOTIFICATION: function SET_TWITTER_NOTIFICATION(state, _ref25) {\n    var notification = _ref25.notification;\n    state.twitterNotification = notification;\n  },\n  SET_TWITTER_NOTIFICATION_SOUND: function SET_TWITTER_NOTIFICATION_SOUND(state, _ref26) {\n    var notificationSound = _ref26.notificationSound;\n    state.twitterNotificationSound = notificationSound;\n  },\n  UPDATE_ACCOUNT: function UPDATE_ACCOUNT(state, _ref27) {\n    var username = _ref27.username,\n        password = _ref27.password,\n        avatarUrl = _ref27.avatarUrl;\n    state.twitterUsername = username;\n    state.twitterPassword = password;\n    state.twitterAvatarUrl = avatarUrl;\n  },\n  SET_TWEETS: function SET_TWEETS(state, _ref28) {\n    var tweets = _ref28.tweets;\n    state.tweets = tweets;\n  },\n  SET_FAVORITE_TWEETS: function SET_FAVORITE_TWEETS(state, _ref29) {\n    var tweets = _ref29.tweets;\n    state.favoriteTweets = tweets;\n  },\n  ADD_TWEET: function ADD_TWEET(state, _ref30) {\n    var tweet = _ref30.tweet;\n    state.tweets = [tweet].concat((0,toConsumableArray/* default */.Z)(state.tweets));\n  },\n  UPDATE_TWEET_LIKE: function UPDATE_TWEET_LIKE(state, _ref31) {\n    var tweetId = _ref31.tweetId,\n        likes = _ref31.likes;\n    var tweetIndex = state.tweets.findIndex(function (t) {\n      return t.id === tweetId;\n    });\n\n    if (tweetIndex !== -1) {\n      state.tweets[tweetIndex].likes = likes;\n    }\n\n    var tweetIndexFav = state.favoriteTweets.findIndex(function (t) {\n      return t.id === tweetId;\n    });\n\n    if (tweetIndexFav !== -1) {\n      state.favoriteTweets[tweetIndexFav].likes = likes;\n    }\n  },\n  UPDATE_TWEET_ISLIKE: function UPDATE_TWEET_ISLIKE(state, _ref32) {\n    var tweetId = _ref32.tweetId,\n        isLikes = _ref32.isLikes;\n    var tweetIndex = state.tweets.findIndex(function (t) {\n      return t.id === tweetId;\n    });\n\n    if (tweetIndex !== -1) {\n      vue_esm/* default.set */.Z.set(state.tweets[tweetIndex], 'isLikes', isLikes);\n    }\n\n    var tweetIndexFav = state.favoriteTweets.findIndex(function (t) {\n      return t.id === tweetId;\n    });\n\n    if (tweetIndexFav !== -1) {\n      vue_esm/* default.set */.Z.set(state.favoriteTweets[tweetIndexFav], 'isLikes', isLikes);\n    }\n  }\n};\n/* harmony default export */ var twitter = ({\n  state: twitter_state,\n  getters: twitter_getters,\n  actions: twitter_actions,\n  mutations: twitter_mutations\n});\n\nif (false) {}\n;// CONCATENATED MODULE: ./src/store/modules/racing.js\n\nvar racing_state = {\n  races: [],\n  tracks: [],\n  raceProcessing: false,\n  raceInfo: {\n    active: false,\n    status: 0,\n    raceID: null,\n    PI: 0,\n    currentLap: 0,\n    totalLaps: 0,\n    checkpoints: 0,\n    currentCheckpoint: 0,\n    currentPosition: 1,\n    players: 0\n  }\n};\nvar racing_getters = {\n  raceInfo: function raceInfo(_ref) {\n    var _raceInfo = _ref.raceInfo;\n    return _raceInfo;\n  },\n  raceLap: function raceLap(_ref2) {\n    var raceInfo = _ref2.raceInfo;\n    return raceInfo.currentLap;\n  },\n  raceStatus: function raceStatus(_ref3) {\n    var raceInfo = _ref3.raceInfo;\n    return raceInfo.status;\n  },\n  raceProcessing: function raceProcessing(_ref4) {\n    var _raceProcessing = _ref4.raceProcessing;\n    return _raceProcessing;\n  },\n  races: function races(_ref5) {\n    var _races = _ref5.races;\n    return _races;\n  },\n  racingTracks: function racingTracks(_ref6) {\n    var tracks = _ref6.tracks;\n    return tracks;\n  },\n  getRaceById: function getRaceById(state) {\n    return function (id) {\n      return state.races.find(function (race) {\n        return race.raceID === id;\n      });\n    };\n  }\n};\nvar racing_actions = {\n  racingGet: function racingGet(_ref7) {\n    var commit = _ref7.commit,\n        getters = _ref7.getters,\n        dispatch = _ref7.dispatch;\n    return PhoneAPI/* default.getRaces */.Z.getRaces().then(function (response) {\n      if (response.data.code) {\n        commit('RACING_SET_RACES', response.data.races);\n        commit('RACING_SET_TRACKS', response.data.tracks);\n\n        if (getters.raceInfo.raceID && getters.races.find(function (race) {\n          return race.raceID === getters.raceInfo.raceID;\n        })) {\n          dispatch('setRacingPlayers', getters.races.find(function (race) {\n            return race.raceID === getters.raceInfo.raceID;\n          }).players.length);\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    }).catch(function () {\n      return false;\n    });\n  },\n  racingReset: function racingReset(_ref8) {\n    var commit = _ref8.commit;\n    commit('RACING_RESET');\n  },\n  racingJoin: function racingJoin(_ref9, data) {\n    var commit = _ref9.commit,\n        getters = _ref9.getters,\n        dispatch = _ref9.dispatch;\n    commit('RACING_SET_PROCCESING', true);\n    return PhoneAPI/* default.joinRace */.Z.joinRace(data.raceID, data.alias).then(function (response) {\n      if (response.data.success) {\n        dispatch('setRacingTotalLaps', getters.races.find(function (race) {\n          return race.raceID === response.data.eventID;\n        }).Laps);\n        dispatch('setRacingTotalCheckpoints', getters.races.find(function (race) {\n          return race.raceID === response.data.eventID;\n        }).checkpointsCount);\n        dispatch('setRacingPlayers', getters.races.find(function (race) {\n          return race.raceID === response.data.eventID;\n        }).players.length);\n        dispatch('setRacingID', response.data.eventID);\n        dispatch('setPlayerIndex', response.data.playerIndex);\n        dispatch('setRacingActive', true);\n        dispatch('racingGet');\n      } else {\n        return false;\n      }\n    }).catch(function () {\n      return false;\n    });\n  },\n  racingCreate: function racingCreate(_ref10, data) {\n    var commit = _ref10.commit,\n        dispatch = _ref10.dispatch;\n    return PhoneAPI/* default.createRace */.Z.createRace(data).then(function (response) {\n      if (response.data.success) {\n        dispatch('racingGet');\n        return setTimeout(function () {\n          dispatch('racingJoin', {\n            raceID: response.data.eventID,\n            alias: response.data.alias\n          });\n          commit('RACING_SET_PROCCESING', false);\n          return true;\n        }, 500);\n      } else {\n        return false;\n      }\n    }).catch(function () {\n      return false;\n    });\n  },\n  // Core\n  setRacingActive: function setRacingActive(_ref11, status) {\n    var commit = _ref11.commit,\n        state = _ref11.state;\n    commit('SET_RACING_ACTIVE', status);\n    return state.raceInfo.active;\n  },\n  setRacingStatus: function setRacingStatus(_ref12, status) {\n    var commit = _ref12.commit,\n        state = _ref12.state;\n    commit('SET_RACING_STATUS', status);\n    return state.raceInfo.status;\n  },\n  setRacingID: function setRacingID(_ref13, id) {\n    var commit = _ref13.commit,\n        state = _ref13.state;\n    commit('SET_RACING_RACEID', id);\n    return state.raceInfo.raceID;\n  },\n  setPlayerIndex: function setPlayerIndex(_ref14, PI) {\n    var commit = _ref14.commit,\n        state = _ref14.state;\n    commit('SET_RACING_PI', PI);\n    return state.raceInfo.PI;\n  },\n  // Laps\n  setRacingCurrentLap: function setRacingCurrentLap(_ref15, lap) {\n    var commit = _ref15.commit,\n        state = _ref15.state;\n    commit('SET_RACING_CURRENT_LAP', lap);\n    return state.raceInfo.currentLap;\n  },\n  setRacingBestLap: function setRacingBestLap(_ref16, timing) {\n    var commit = _ref16.commit,\n        state = _ref16.state;\n    commit('SET_RACING_BEST_LAP', timing);\n    return state.raceInfo.bestLap;\n  },\n  setRacingTotalLaps: function setRacingTotalLaps(_ref17, laps) {\n    var commit = _ref17.commit,\n        state = _ref17.state;\n    commit('SET_RACING_TOTAL_LAPS', laps);\n    return state.raceInfo.totalLaps;\n  },\n  // CheckPoint\n  setRacingTotalCheckpoints: function setRacingTotalCheckpoints(_ref18, checkpoints) {\n    var commit = _ref18.commit,\n        state = _ref18.state;\n    commit('SET_RACING_CHECKPOINTS', checkpoints);\n    return state.raceInfo.checkpoints;\n  },\n  setRacingCurrentCheckpoint: function setRacingCurrentCheckpoint(_ref19, checkpoint) {\n    var commit = _ref19.commit,\n        state = _ref19.state;\n    commit('SET_RACING_CURRENT_CHECKPOINT', checkpoint);\n    return state.raceInfo.currentCheckpoint;\n  },\n  // Positions\n  setRacingPlayers: function setRacingPlayers(_ref20, players) {\n    var commit = _ref20.commit,\n        state = _ref20.state;\n    commit('SET_RACING_PLAYERS', players);\n    return state.raceInfo.players;\n  },\n  setRacingCurrentPosition: function setRacingCurrentPosition(_ref21, laps) {\n    var commit = _ref21.commit,\n        state = _ref21.state;\n    commit('SET_RACING_CURRENT_POSITION', laps);\n    return state.raceInfo.currentPosition;\n  }\n};\nvar racing_mutations = {\n  RACING_SET_TRACKS: function RACING_SET_TRACKS(state, data) {\n    state.tracks = data;\n  },\n  RACING_SET_RACES: function RACING_SET_RACES(state, data) {\n    state.races = [];\n    Object.assign(state.races, data);\n  },\n  RACING_SET_RACEINFO: function RACING_SET_RACEINFO(state, data) {\n    state.raceInfo = data;\n  },\n  RACING_RESET: function RACING_RESET(state) {\n    state.raceInfo = [];\n  },\n  RACING_SET_PROCCESING: function RACING_SET_PROCCESING(state, status) {\n    state.raceProcessing = status;\n  },\n  RACING_ADD_RACE: function RACING_ADD_RACE(state, race) {\n    state.races.push(race);\n  },\n  // Core\n  SET_RACING_ACTIVE: function SET_RACING_ACTIVE(state, status) {\n    state.raceInfo.active = status;\n  },\n  SET_RACING_STATUS: function SET_RACING_STATUS(state, status) {\n    state.raceInfo.status = status;\n  },\n  SET_RACING_RACEID: function SET_RACING_RACEID(state, raceID) {\n    state.raceInfo.raceID = raceID;\n  },\n  SET_RACING_PI: function SET_RACING_PI(state, PI) {\n    state.raceInfo.PI = PI;\n  },\n  // Laps\n  SET_RACING_CURRENT_LAP: function SET_RACING_CURRENT_LAP(state, lap) {\n    state.raceInfo.currentLap = lap;\n  },\n  SET_RACING_BEST_LAP: function SET_RACING_BEST_LAP(state, timing) {\n    state.raceInfo.bestLap = timing;\n  },\n  SET_RACING_TOTAL_LAPS: function SET_RACING_TOTAL_LAPS(state, laps) {\n    state.raceInfo.totalLaps = laps;\n  },\n  // CheckPoints\n  SET_RACING_CHECKPOINTS: function SET_RACING_CHECKPOINTS(state, checkpoints) {\n    state.raceInfo.checkpoints = checkpoints;\n  },\n  SET_RACING_CURRENT_CHECKPOINT: function SET_RACING_CURRENT_CHECKPOINT(state, checkpoint) {\n    state.raceInfo.currentCheckpoint = checkpoint;\n  },\n  // Positions\n  SET_RACING_PLAYERS: function SET_RACING_PLAYERS(state, players) {\n    state.raceInfo.players = players;\n  },\n  SET_RACING_CURRENT_POSITION: function SET_RACING_CURRENT_POSITION(state, position) {\n    state.raceInfo.currentPosition = position;\n  }\n};\n/* harmony default export */ var racing = ({\n  state: racing_state,\n  getters: racing_getters,\n  actions: racing_actions,\n  mutations: racing_mutations\n});\n\nif (false) {}\n;// CONCATENATED MODULE: ./src/store/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nvue_esm/* default.use */.Z.use(vuex_esm/* default */.ZP);\nvar debug = \"production\" !== 'production';\n/* harmony default export */ var store = (new vuex_esm/* default.Store */.ZP.Store({\n  modules: {\n    phone: phone,\n    contacts: contacts,\n    messages: messages,\n    appels: appels,\n    bank: bank,\n    bourse: bourse,\n    notes: notes,\n    tchat: tchat,\n    twitter: twitter,\n    racing: racing\n  },\n  strict: debug,\n  plugins: debug ? [logger_default()()] : []\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7776\n")},4869:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ RacingHUD; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Racing/RacingHUD.vue?vue&type=template&id=7a67d8c7&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{attrs:{"id":"racing-hud"}},[_c(\'div\',{staticClass:"inside"},[_c(\'table\',{staticClass:"table table-borderless table-sm"},[_c(\'tbody\',{staticClass:"text-white"},[_c(\'tr\',[_c(\'td\',[_vm._v("Pos")]),_vm._v(" "),_c(\'td\',{staticClass:"text-right"},[_vm._v("\\n            "+_vm._s(_vm.raceInfo.currentPosition)+"/"+_vm._s(_vm.raceInfo.players)+"\\n          ")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_vm._v("Lap")]),_vm._v(" "),_c(\'td\',{staticClass:"text-right"},[_vm._v("\\n            "+_vm._s(_vm.raceInfo.currentLap+1)+"/"+_vm._s(_vm.raceInfo.totalLaps)+"\\n          ")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',[_vm._v("Checkpoint")]),_vm._v(" "),_c(\'td\',{staticClass:"text-right"},[_vm._v("\\n            "+_vm._s(_vm.raceInfo.currentCheckpoint)+"/"+_vm._s(_vm.raceInfo.checkpoints)+"\\n          ")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',{staticClass:"timing"},[_vm._v("\\n            Current Lap\\n          ")]),_vm._v(" "),_c(\'td\',{staticClass:"timing text-right"},[_vm._v("\\n            "+_vm._s(_vm.lapTime)+"\\n          ")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',{staticClass:"timing"},[_vm._v("\\n            Best Lap\\n          ")]),_vm._v(" "),_c(\'td\',{staticClass:"timing text-right"},[_vm._v("\\n            "+_vm._s(_vm.bestLap)+"\\n          ")])]),_vm._v(" "),_c(\'tr\',[_c(\'td\',{staticClass:"timing"},[_vm._v("\\n            Total Time\\n          ")]),_vm._v(" "),_c(\'td\',{staticClass:"timing text-right"},[_vm._v("\\n            "+_vm._s(_vm.totalTime)+"\\n          ")])])])])])])}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Racing/RacingHUD.vue?vue&type=script&lang=js&\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar _require = __webpack_require__(9490),\n    DateTime = _require.DateTime;\n\n/* harmony default export */ var RacingHUDvue_type_script_lang_js_ = ({\n  data: function data() {\n    return {\n      nowLap: DateTime.local(),\n      nowTotal: DateTime.local(),\n      tick: null,\n      lapTime: "--:--:--",\n      totalTime: "--:--:--",\n      bestLap: "--:--:--",\n      lapTimes: []\n    };\n  },\n  computed: _objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'raceInfo\', \'raceStatus\', \'raceLap\'])),\n  watch: {\n    raceStatus: function raceStatus() {\n      this.raceStatus === 1 ? this.startTimers() : this.stopTimers();\n    },\n    raceLap: function raceLap() {\n      if (this.raceLap !== 0) {\n        this.lapTimes.push(DateTime.fromFormat(this.lapTime, \'mm:ss.SSS\').toMillis());\n        this.nowLap = DateTime.local();\n        this.bestLap = DateTime.fromMillis(Math.min.apply(Math, this.lapTimes)).toFormat(\'mm:ss.SSS\');\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  beforeDestroy: function beforeDestroy() {\n    if (this.tick) clearInterval(this.tick);\n  },\n  methods: {\n    startTimers: function startTimers() {\n      var _this = this;\n\n      var self = this;\n      this.nowLap = this.nowTotal = DateTime.local();\n      this.tick = setInterval(function () {\n        self.lapTime = DateTime.local().diff(_this.nowLap).toFormat(\'mm:ss.SSS\');\n        self.totalTime = DateTime.local().diff(_this.nowTotal).toFormat(\'mm:ss.SSS\');\n      }, 10);\n    },\n    stopTimers: function stopTimers() {\n      clearInterval(this.tick);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/Racing/RacingHUD.vue?vue&type=script&lang=js&\n /* harmony default export */ var Racing_RacingHUDvue_type_script_lang_js_ = (RacingHUDvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./src/components/Racing/RacingHUD.vue\n\n\n\n;\n\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  Racing_RacingHUDvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "7a67d8c7",\n  null\n  \n)\n\n/* harmony default export */ var RacingHUD = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4869\n')}},function(Q){"use strict";var n=function(n){return Q(Q.s=n)};Q.O(0,[4244,9278,6887,8612,5104,1911,8895,3240,8074,5311,3453,7070,223,6877,6291,9866,2106,840,9861,7309,2279,6477,907,3030,9306,859,266,7237,1116,8878,5302,1707,418],(function(){return n(8037),n(2004)}));Q.O()}]);