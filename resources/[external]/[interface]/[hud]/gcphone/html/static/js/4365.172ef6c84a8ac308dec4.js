(self.webpackChunksrc_htmlphone=self.webpackChunksrc_htmlphone||[]).push([[4365],{4365:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ TwitterScreen; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterScreen.vue?vue&type=template&id=7e25cb61&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_app",staticStyle:{"width":"326px","height":"743px"}},[_c(\'PhoneTitle\',{attrs:{"title":_vm.currentScreen.title,"background-color":"white"},on:{"back":_vm.quit}}),_vm._v(" "),_c(\'div\',{staticClass:"phone_content"},[_c(_vm.currentScreen.component,{tag:"component"})],1),_vm._v(" "),_c(\'div\',{staticClass:"twitter_menu"},_vm._l((_vm.screen),function(s,i){return _c(\'div\',{key:i,staticClass:"twitter_menu-item",class:{select: i === _vm.currentScreenIndex},on:{"click":function($event){$event.stopPropagation();return _vm.openMenu(i)}}},[_c(\'FontAwesomeIcon\',{attrs:{"icon":[\'fas\', s.icon]},on:{"click":function($event){$event.stopPropagation();return _vm.openMenu(i)}}})],1)}),0)],1)}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./src/components/PhoneTitle.vue + 3 modules\nvar PhoneTitle = __webpack_require__(5317);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterView.vue?vue&type=template&id=03492790&scoped=true&\nvar TwitterViewvue_type_template_id_03492790_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_content",staticStyle:{"width":"326px","height":"743px"}},[(_vm.imgZoom !== undefined)?_c(\'div\',{staticClass:"img-fullscreen",on:{"click":function($event){$event.stopPropagation();_vm.imgZoom = undefined}}},[_c(\'img\',{attrs:{"src":_vm.imgZoom,"alt":""}})]):_vm._e(),_vm._v(" "),_c(\'div\',{ref:"elementsDiv",staticClass:"tweets-wrapper"},_vm._l((_vm.tweets),function(tweet,key){return _c(\'div\',{key:tweet.id,staticClass:"tweet",class:{ select: key === _vm.selectMessage}},[_c(\'div\',{staticClass:"tweet-img"},[_c(\'img\',{staticStyle:{"max-width":"48px","max-height":"48px"},attrs:{"src":tweet.authorIcon || \'https://i.imgur.com/pE20YaL.png\',"alt":""}})]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-content"},[_c(\'div\',{staticClass:"tweet-head"},[_c(\'div\',{staticClass:"tweet-head-author"},[_vm._v("\\n            "+_vm._s(tweet.author)+"\\n          ")]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-head-time"},[_vm._v("\\n            "+_vm._s(_vm.formatTime(tweet.time))+"\\n          ")])]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-message"},[(!_vm.isImage(tweet.message))?[_vm._v("\\n            "+_vm._s(tweet.message)+"\\n          ")]:_c(\'img\',{staticClass:"tweet-attachement-img",attrs:{"alt":"","src":tweet.message},on:{"click":function($event){$event.stopPropagation();_vm.imgZoom = tweet.message}}})],2),_vm._v(" "),_c(\'div\',{staticClass:"tweet-like"},[_c(\'div\',{staticClass:"item svgreply",on:{"click":function($event){$event.stopPropagation();return _vm.reply(tweet)}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.reply(tweet)}}},[_c(\'path\',{attrs:{"fill":"none","d":"M0 0h24v24H0V0z"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"}})])]),_vm._v(" "),_c(\'div\',{staticClass:"item"},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"}})])]),_vm._v(" "),(tweet.isLikes)?_c(\'div\',{staticClass:"item svgdislike",on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}})]),_vm._v(" "),_c(\'span\',{on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_vm._v(_vm._s(tweet.likes))])]):_c(\'div\',{staticClass:"svglike",on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}})]),_vm._v(" "),_c(\'span\',{on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_vm._v(_vm._s(tweet.likes))])]),_vm._v(" "),_c(\'div\',{staticClass:"item"},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"}},[_c(\'path\',{attrs:{"fill":"none","d":"M0 0h24v24H0V0z"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"}})])])])])])}),0)])}\nvar TwitterViewvue_type_template_id_03492790_scoped_true_staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 5 modules\nvar toConsumableArray = __webpack_require__(18);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(2137);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(7757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./src/components/Modal/index.js + 8 modules\nvar Modal = __webpack_require__(4410);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterView.vue?vue&type=script&lang=js&\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var TwitterViewvue_type_script_lang_js_ = ({\n  components: {},\n  data: function data() {\n    return {\n      selectMessage: -1,\n      ignoreControls: false,\n      imgZoom: undefined\n    };\n  },\n  computed: _objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'tweets\', \'IntlString\', \'useMouse\'])),\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpArrowDown\', this.onDown);\n      this.$bus.$on(\'keyUpArrowUp\', this.onUp);\n      this.$bus.$on(\'keyUpEnter\', this.onEnter);\n    }\n\n    this.$bus.$on(\'keyUpBackspace\', this.onBack);\n  },\n  mounted: function mounted() {\n    this.fetchTweets();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpArrowDown\', this.onDown);\n    this.$bus.$off(\'keyUpArrowUp\', this.onUp);\n    this.$bus.$off(\'keyUpEnter\', this.onEnter);\n    this.$bus.$off(\'keyUpBackspace\', this.onBack);\n  },\n  methods: _objectSpread(_objectSpread({}, (0,vuex_esm/* mapActions */.nv)([\'twitterLogin\', \'twitterPostTweet\', \'twitterToogleLike\', \'fetchTweets\'])), {}, {\n    showOption: function showOption() {\n      var _this = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        var tweet, optionsChoix, choix;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.ignoreControls = true;\n                tweet = _this.tweets[_this.selectMessage];\n                optionsChoix = [{\n                  id: 1,\n                  title: \'Like / Unlike\',\n                  icons: \'fa-heart\'\n                }, {\n                  id: 2,\n                  title: \'Répondre\',\n                  icons: \'fa-reply\'\n                }, {\n                  id: -1,\n                  title: _this.IntlString(\'CANCEL\'),\n                  icons: \'fa-undo\'\n                }];\n\n                if (_this.isImage(tweet.message)) {\n                  optionsChoix = [{\n                    id: 3,\n                    title: _this.IntlString(\'APP_MESSAGE_ZOOM_IMG\'),\n                    icons: \'fa-search\'\n                  }].concat((0,toConsumableArray/* default */.Z)(optionsChoix));\n                }\n\n                _context.next = 6;\n                return Modal/* default.CreateModal */.Z.CreateModal({\n                  choix: optionsChoix\n                });\n\n              case 6:\n                choix = _context.sent;\n                _this.ignoreControls = false;\n                _context.t0 = choix.id;\n                _context.next = _context.t0 === 1 ? 11 : _context.t0 === 2 ? 13 : _context.t0 === 3 ? 15 : 17;\n                break;\n\n              case 11:\n                _this.twitterToogleLike({\n                  tweetId: tweet.id\n                });\n\n                return _context.abrupt("break", 17);\n\n              case 13:\n                _this.reply(tweet);\n\n                return _context.abrupt("break", 17);\n\n              case 15:\n                _this.imgZoom = tweet.message;\n                return _context.abrupt("break", 17);\n\n              case 17:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    isImage: function isImage(mess) {\n      return /^https?:\\/\\/.*\\.(png|jpg|jpeg|gif)/.test(mess);\n    },\n    reply: function reply(tweet) {\n      var _this2 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var authorName, rep, message;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                authorName = tweet.author;\n                _context2.prev = 1;\n                _this2.ignoreControls = true;\n                _context2.next = 5;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  title: \'Répondre\',\n                  text: "@".concat(authorName, " ")\n                });\n\n              case 5:\n                rep = _context2.sent;\n\n                if (rep !== undefined && rep.text !== undefined) {\n                  message = rep.text.trim();\n\n                  if (message.length !== 0) {\n                    _this2.twitterPostTweet({\n                      message: message\n                    });\n                  }\n                }\n\n              case 7:\n                _context2.prev = 7;\n                _this2.ignoreControls = false;\n                return _context2.finish(7);\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1,, 7, 10]]);\n      }))();\n    },\n    resetScroll: function resetScroll() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        var elem = document.querySelector(\'#tweets\');\n        elem.scrollTop = elem.scrollHeight;\n        _this3.selectMessage = -1;\n      });\n    },\n    scrollIntoViewIfNeeded: function scrollIntoViewIfNeeded() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        var elem = _this4.$el.querySelector(\'.select\');\n\n        if (elem !== null) {\n          elem.scrollIntoViewIfNeeded();\n        }\n      });\n    },\n    onUp: function onUp() {\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage === -1) {\n        this.selectMessage = 0;\n      } else {\n        this.selectMessage = this.selectMessage === 0 ? 0 : this.selectMessage - 1;\n      }\n\n      this.scrollIntoViewIfNeeded();\n    },\n    onDown: function onDown() {\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage === -1) {\n        this.selectMessage = 0;\n      } else {\n        this.selectMessage = this.selectMessage === this.tweets.length - 1 ? this.selectMessage : this.selectMessage + 1;\n      }\n\n      this.scrollIntoViewIfNeeded();\n    },\n    onEnter: function onEnter() {\n      var _this5 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3() {\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(_this5.ignoreControls === true)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt("return");\n\n              case 2:\n                if (!(_this5.selectMessage !== -1)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _this5.showOption();\n\n              case 5:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    onBack: function onBack() {\n      if (this.imgZoom !== undefined) {\n        this.imgZoom = undefined;\n        return;\n      }\n\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage !== -1) {\n        this.selectMessage = -1;\n      } else {\n        this.$router.push({\n          name: \'home\'\n        });\n      }\n    },\n    formatTime: function formatTime(time) {\n      var d = new Date(time);\n      return d.toLocaleTimeString();\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterView.vue?vue&type=script&lang=js&\n /* harmony default export */ var twitter_TwitterViewvue_type_script_lang_js_ = (TwitterViewvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterView.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  twitter_TwitterViewvue_type_script_lang_js_,\n  TwitterViewvue_type_template_id_03492790_scoped_true_render,\n  TwitterViewvue_type_template_id_03492790_scoped_true_staticRenderFns,\n  false,\n  null,\n  "03492790",\n  null\n  \n)\n\n/* harmony default export */ var TwitterView = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterPostTweet.vue?vue&type=template&id=8b97fc96&scoped=true&\nvar TwitterPostTweetvue_type_template_id_8b97fc96_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_content",staticStyle:{"width":"326px","height":"743px"}},[_c(\'div\',{staticClass:"tweet_write"},[_c(\'label\',{attrs:{"for":"textbox"}}),_vm._v(" "),_c(\'textarea\',{directives:[{name:"model",rawName:"v-model.trim",value:(_vm.message),expression:"message",modifiers:{"trim":true}},{name:"autofocus",rawName:"v-autofocus"}],staticClass:"textarea-input",attrs:{"id":"textbox","placeholder":_vm.IntlString(\'APP_TWITTER_PLACEHOLDER_MESSAGE\')},domProps:{"value":(_vm.message)},on:{"input":function($event){if($event.target.composing){ return; }_vm.message=$event.target.value.trim()},"blur":function($event){return _vm.$forceUpdate()}}}),_vm._v(" "),_c(\'span\',{staticClass:"tweet_send",on:{"click":_vm.tweeter}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_BUTTON_ACTION_TWEETER\')))]),_vm._v(" "),_c(\'span\',{staticClass:"tweet_photo",on:{"click":_vm.take_photograph}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_ACCOUNT_TWEET_PHOTO_TAKE\')))])])])}\nvar TwitterPostTweetvue_type_template_id_8b97fc96_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterPostTweet.vue?vue&type=script&lang=js&\n\n\n\n\nfunction TwitterPostTweetvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction TwitterPostTweetvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TwitterPostTweetvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TwitterPostTweetvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var TwitterPostTweetvue_type_script_lang_js_ = ({\n  components: {},\n  data: function data() {\n    return {\n      message: \'\'\n    };\n  },\n  computed: TwitterPostTweetvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'IntlString\', \'useMouse\'])),\n  watch: {},\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpEnter\', this.onEnter);\n    }\n\n    this.$bus.$on(\'keyUpBackspace\', this.onBack);\n  },\n  mounted: function mounted() {\n    return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n      return regenerator_default().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpBackspace\', this.onBack);\n    this.$bus.$off(\'keyUpEnter\', this.onEnter);\n  },\n  methods: TwitterPostTweetvue_type_script_lang_js_objectSpread(TwitterPostTweetvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapActions */.nv)([\'twitterPostTweet\'])), {}, {\n    onEnter: function onEnter() {\n      var _this = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var rep, message;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _this.$phoneAPI.getReponseText({// TODO: ???????????\n                  // text: \'https://i.imgur.com/axLm3p6.png\'\n                });\n\n              case 3:\n                rep = _context2.sent;\n\n                if (rep !== undefined && rep.text !== undefined) {\n                  message = rep.text.trim();\n\n                  if (message.length !== 0) {\n                    _this.twitterPostTweet({\n                      message: message\n                    });\n                  }\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2["catch"](0);\n                _context2.next = 11;\n                return _this.$phoneAPI.log(_context2.t0);\n\n              case 11:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    take_photograph: function take_photograph() {\n      var _this2 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3() {\n        var _yield$_this2$$phoneA, url;\n\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this2.$phoneAPI.takePhoto();\n\n              case 3:\n                _yield$_this2$$phoneA = _context3.sent;\n                url = _yield$_this2$$phoneA.url;\n\n                if (!(url !== null && url !== undefined)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 8;\n                return _this2.twitterPostTweet({\n                  message: url\n                });\n\n              case 8:\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3["catch"](0);\n                _context3.next = 14;\n                return _this2.$phoneAPI.log(_context3.t0);\n\n              case 14:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 10]]);\n      }))();\n    },\n    tweeter: function tweeter() {\n      var _this3 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4() {\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(_this3.message === \'\')) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt("return");\n\n              case 2:\n                _context4.next = 4;\n                return _this3.twitterPostTweet({\n                  message: _this3.message\n                });\n\n              case 4:\n                _this3.message = \'\';\n\n              case 5:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    onBack: function onBack() {\n      if (this.useMouse === true && document.activeElement.tagName !== \'BODY\') return;\n      this.$bus.$emit(\'twitterHome\');\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterPostTweet.vue?vue&type=script&lang=js&\n /* harmony default export */ var twitter_TwitterPostTweetvue_type_script_lang_js_ = (TwitterPostTweetvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/twitter/TwitterPostTweet.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar TwitterPostTweet_component = (0,componentNormalizer/* default */.Z)(\n  twitter_TwitterPostTweetvue_type_script_lang_js_,\n  TwitterPostTweetvue_type_template_id_8b97fc96_scoped_true_render,\n  TwitterPostTweetvue_type_template_id_8b97fc96_scoped_true_staticRenderFns,\n  false,\n  null,\n  "8b97fc96",\n  null\n  \n)\n\n/* harmony default export */ var TwitterPostTweet = (TwitterPostTweet_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterAccount.vue?vue&type=template&id=49bed54b&scoped=true&\nvar TwitterAccountvue_type_template_id_49bed54b_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_content content inputText",staticStyle:{"width":"314px","height":"577px"}},[(_vm.state === _vm.STATES.MENU)?[(!_vm.isLogin)?[_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.LOGIN}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_LOGIN\')},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.LOGIN}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NOTIFICATION}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_NOTIFICATION\')},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NOTIFICATION}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group bottom",staticStyle:{"margin-bottom":"10px"},attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NEW_ACCOUNT}}},[_c(\'input\',{staticClass:"btn btn-red",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_NEW\')},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NEW_ACCOUNT}}})])]:_vm._e(),_vm._v(" "),(_vm.isLogin)?[_c(\'img\',{staticStyle:{"align-self":"center"},attrs:{"src":_vm.twitterAvatarUrl,"alt":"","height":"128","width":"128"}}),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.ACCOUNT}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_PARAM\')},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.ACCOUNT}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NOTIFICATION}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_NOTIFICATION\')},on:{"click":function($event){$event.stopPropagation();_vm.state = _vm.STATES.NOTIFICATION}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group bottom",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.logout($event)}}},[_c(\'input\',{staticClass:"btn btn-red",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_LOGOUT\')},on:{"click":function($event){$event.stopPropagation();return _vm.logout($event)}}})])]:_vm._e()]:(_vm.state === _vm.STATES.LOGIN)?[_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-maxlength":"64","data-defaultValue":_vm.localAccount.username}},[_c(\'input\',{attrs:{"id":"username","type":"text"},domProps:{"value":_vm.localAccount.username},on:{"change":function($event){return _vm.setLocalAccount($event, \'username\')}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"username"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_ACCOUNT_USERNAME\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-model":"password","data-maxlength":"30"}},[_c(\'input\',{attrs:{"id":"password","autocomplete":"new-password","type":"password"},domProps:{"value":_vm.localAccount.password},on:{"change":function($event){return _vm.setLocalAccount($event, \'password\')}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"password"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_ACCOUNT_PASSWORD\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.login($event)}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_LOGIN\')},on:{"click":function($event){$event.stopPropagation();return _vm.login($event)}}})])]:(_vm.state === _vm.STATES.NOTIFICATION)?[_c(\'div\',{staticClass:"groupCheckBoxTitle"},[_c(\'label\',[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_WHEN\')))])]),_vm._v(" "),_c(\'label\',{staticClass:"group checkbox",attrs:{"data-type":"button"},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(2)}}},[_c(\'input\',{attrs:{"type":"checkbox"},domProps:{"checked":_vm.twitterNotification === 2},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(2)}}}),_vm._v("\\n      "+_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_ALL\'))+"\\n    ")]),_vm._v(" "),_c(\'label\',{staticClass:"group checkbox",attrs:{"data-type":"button"},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(1)}}},[_c(\'input\',{attrs:{"type":"checkbox"},domProps:{"checked":_vm.twitterNotification === 1},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(1)}}}),_vm._v("\\n      "+_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_MENTION\'))+"\\n    ")]),_vm._v(" "),_c(\'label\',{staticClass:"group checkbox",attrs:{"data-type":"button"},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(0)}}},[_c(\'input\',{attrs:{"type":"checkbox"},domProps:{"checked":_vm.twitterNotification === 0},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotification(0)}}}),_vm._v("\\n      "+_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_NEVER\'))+"\\n    ")]),_vm._v(" "),_c(\'div\',{staticClass:"groupCheckBoxTitle"},[_c(\'label\',[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_SOUND\')))])]),_vm._v(" "),_c(\'label\',{staticClass:"group checkbox",attrs:{"data-type":"button"},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotificationSound(true)}}},[_c(\'input\',{attrs:{"type":"checkbox"},domProps:{"checked":_vm.twitterNotificationSound},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotificationSound(true)}}}),_vm._v("\\n      "+_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_SOUND_YES\'))+"\\n    ")]),_vm._v(" "),_c(\'label\',{staticClass:"group checkbox",attrs:{"data-type":"button"},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotificationSound(false)}}},[_c(\'input\',{attrs:{"type":"checkbox"},domProps:{"checked":!_vm.twitterNotificationSound},on:{"click":function($event){$event.preventDefault();$event.stopPropagation();return _vm.setNotificationSound(false)}}}),_vm._v("\\n      "+_vm._s(_vm.IntlString(\'APP_TWITTER_NOTIFICATION_SOUND_NO\'))+"\\n    ")])]:(_vm.state === _vm.STATES.ACCOUNT)?[_c(\'img\',{staticStyle:{"align-self":"center"},attrs:{"src":_vm.twitterAvatarUrl,"alt":"","height":"128","width":"128"}}),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.onPressChangeAvartar($event)}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_AVATAR\')},on:{"click":function($event){$event.stopPropagation();return _vm.onPressChangeAvartar($event)}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.onPressChangeAvartartake($event)}}},[_c(\'input\',{staticClass:"btn btn-blue",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_AVATAR_TAKE\')},on:{"click":function($event){$event.stopPropagation();return _vm.onPressChangeAvartartake($event)}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.changePassword($event)}}},[_c(\'input\',{staticClass:"btn btn-red",attrs:{"type":"button","value":_vm.IntlString(\'APP_TWITTER_ACCOUNT_CHANGE_PASSWORD\')},on:{"click":function($event){$event.stopPropagation();return _vm.changePassword($event)}}})])]:(_vm.state === _vm.STATES.NEW_ACCOUNT)?[_vm._m(0),_vm._v(" "),_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-maxlength":"64","data-defaultValue":""}},[_c(\'input\',{attrs:{"id":"new_account_username","type":"text"},domProps:{"value":_vm.localAccount.username},on:{"change":function($event){return _vm.setLocalAccount($event, \'username\')}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"new_account_username"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_NEW_ACCOUNT_USERNAME\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-model":"password","data-maxlength":"30"}},[_c(\'input\',{attrs:{"id":"confirm","autocomplete":"new-password","type":"password"},domProps:{"value":_vm.localAccount.password},on:{"change":function($event){return _vm.setLocalAccount($event, \'password\')}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"confirm"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_NEW_ACCOUNT_PASSWORD\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-model":"password","data-maxlength":"30"}},[_c(\'input\',{attrs:{"id":"new_password","autocomplete":"new-password","type":"password"},domProps:{"value":_vm.localAccount.passwordConfirm},on:{"change":function($event){return _vm.setLocalAccount($event, \'passwordConfirm\')}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"new_password"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_TWITTER_NEW_ACCOUNT_PASSWORD_CONFIRM\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group",staticStyle:{"margin-right":"7px"},attrs:{"data-type":"button"},on:{"click":function($event){$event.stopPropagation();return _vm.createAccount($event)}}},[_c(\'input\',{staticClass:"btn",class:_vm.validAccount ? \'btn-blue\' : \'btn-gray\',attrs:{"type":"button","value":_vm.IntlString(\'APP_TWIITER_ACCOUNT_CREATE\')},on:{"click":function($event){$event.stopPropagation();return _vm.createAccount($event)}}})])]:_vm._e()],2)}\nvar TwitterAccountvue_type_template_id_49bed54b_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"group img",staticStyle:{"margin-left":"auto","margin-right":"auto"},attrs:{"data-type":"button"}},[_c(\'img\',{staticStyle:{"margin-bottom":"10px"},attrs:{"alt":"","src":"/html/static/img/twitter/bird.png"}})])}]\n\n\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterAccount.vue?vue&type=template&id=49bed54b&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterAccount.vue?vue&type=script&lang=js&\n\n\n\n\nfunction TwitterAccountvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction TwitterAccountvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TwitterAccountvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TwitterAccountvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar STATES = Object.freeze({\n  MENU: 0,\n  NEW_ACCOUNT: 1,\n  LOGIN: 2,\n  ACCOUNT: 3,\n  NOTIFICATION: 4\n});\n/* harmony default export */ var TwitterAccountvue_type_script_lang_js_ = ({\n  components: {},\n  data: function data() {\n    return {\n      STATES: STATES,\n      state: STATES.MENU,\n      localAccount: {\n        username: \'\',\n        password: \'\',\n        passwordConfirm: \'\',\n        avatarUrl: \'https://i.imgur.com/pE20YaL.png\'\n      },\n      notification: 0,\n      notificationSound: false\n    };\n  },\n  computed: TwitterAccountvue_type_script_lang_js_objectSpread(TwitterAccountvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'IntlString\', \'useMouse\', \'twitterUsername\', \'twitterPassword\', \'twitterAvatarUrl\', \'twitterNotification\', \'twitterNotificationSound\'])), {}, {\n    isLogin: function isLogin() {\n      return this.twitterUsername !== undefined && this.twitterUsername !== \'\';\n    },\n    validAccount: function validAccount() {\n      return this.localAccount.username.length >= 4 && this.localAccount.password.length >= 6 && this.localAccount.password === this.localAccount.passwordConfirm;\n    }\n  }),\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpArrowDown\', this.onDown);\n      this.$bus.$on(\'keyUpArrowUp\', this.onUp);\n      this.$bus.$on(\'keyUpEnter\', this.onEnter);\n      this.$bus.$on(\'keyUpBackspace\', this.onBack);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpArrowDown\', this.onDown);\n    this.$bus.$off(\'keyUpArrowUp\', this.onUp);\n    this.$bus.$off(\'keyUpEnter\', this.onEnter);\n    this.$bus.$off(\'keyUpBackspace\', this.onBack);\n  },\n  methods: TwitterAccountvue_type_script_lang_js_objectSpread(TwitterAccountvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapActions */.nv)([\'twitterLogin\', \'twitterChangePassword\', \'twitterLogout\', \'twitterSetAvatar\', \'twitterCreateNewAccount\', \'setTwitterNotification\', \'setTwitterNotificationSound\'])), {}, {\n    onUp: function onUp() {\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n\n      if (select === null) {\n        select = document.querySelector(\'.group\');\n        select.classList.add(\'select\');\n        return;\n      }\n\n      while (select.previousElementSibling !== null) {\n        if (select.previousElementSibling.classList.contains(\'group\')) {\n          break;\n        }\n\n        select = select.previousElementSibling;\n      }\n\n      if (select.previousElementSibling !== null) {\n        document.querySelectorAll(\'.group\').forEach(function (elem) {\n          elem.classList.remove(\'select\');\n        });\n        select.previousElementSibling.classList.add(\'select\');\n        var i = select.previousElementSibling.querySelector(\'input\');\n\n        if (i !== null) {\n          i.focus();\n        }\n      }\n    },\n    onDown: function onDown() {\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n\n      if (select === null) {\n        select = document.querySelector(\'.group\');\n        select.classList.add(\'select\');\n        return;\n      }\n\n      while (select.nextElementSibling !== null) {\n        if (select.nextElementSibling.classList.contains(\'group\')) {\n          break;\n        }\n\n        select = select.nextElementSibling;\n      }\n\n      if (select.nextElementSibling !== null) {\n        document.querySelectorAll(\'.group\').forEach(function (elem) {\n          elem.classList.remove(\'select\');\n        });\n        select.nextElementSibling.classList.add(\'select\');\n        var i = select.nextElementSibling.querySelector(\'input\');\n\n        if (i !== null) {\n          i.focus();\n        }\n      }\n    },\n    onEnter: function onEnter() {\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n      if (select === null) return;\n\n      if (select.dataset !== null) {\n        if (select.dataset.type === \'text\') {\n          var $input = select.querySelector(\'input\');\n          var options = {\n            limit: parseInt(select.dataset.maxlength) || 64,\n            text: select.dataset.defaultValue || \'\'\n          };\n          this.$phoneAPI.getReponseText(options).then(function (data) {\n            $input.value = data.text;\n            $input.dispatchEvent(new window.Event(\'change\'));\n          });\n        }\n\n        if (select.dataset.type === \'button\') {\n          select.click();\n        }\n      }\n    },\n    onBack: function onBack() {\n      if (this.state !== this.STATES.MENU) {\n        this.state = this.STATES.MENU;\n      } else {\n        this.$bus.$emit(\'twitterHome\');\n      }\n    },\n    setLocalAccount: function setLocalAccount($event, key) {\n      this.localAccount[key] = $event.target.value;\n    },\n    setLocalAccountAvartarTake: function setLocalAccountAvartarTake() {\n      var _this = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        var _yield$_this$$phoneAP, url;\n\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$phoneAPI.takePhoto();\n\n              case 3:\n                _yield$_this$$phoneAP = _context.sent;\n                url = _yield$_this$$phoneAP.url;\n\n                if (url !== null && url !== undefined) {\n                  _this.localAccount.avatarUrl = url;\n                }\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context["catch"](0);\n                _context.next = 12;\n                return _this.$phoneAPI.log(_context.t0);\n\n              case 12:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    setLocalAccountAvartar: function setLocalAccountAvartar() {\n      var _this2 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var data;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  text: _this2.twitterAvatarUrl || \'https://i.imgur.com/\'\n                });\n\n              case 3:\n                data = _context2.sent;\n                _this2.localAccount.avatarUrl = data.text;\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2["catch"](0);\n                _context2.next = 11;\n                return _this2.$phoneAPI.log(_context2.t0);\n\n              case 11:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    onPressChangeAvartartake: function onPressChangeAvartartake() {\n      var _this3 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3() {\n        var _yield$_this3$$phoneA, url;\n\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _this3.$phoneAPI.takePhoto();\n\n              case 3:\n                _yield$_this3$$phoneA = _context3.sent;\n                url = _yield$_this3$$phoneA.url;\n\n                if (url !== null && url !== undefined) {\n                  _this3.twitterSetAvatar({\n                    avatarUrl: url\n                  });\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3["catch"](0);\n                _context3.next = 12;\n                return _this3.$phoneAPI.log(_context3.t0);\n\n              case 12:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    onPressChangeAvartar: function onPressChangeAvartar() {\n      var _this4 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4() {\n        var data;\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  text: _this4.twitterAvatarUrl || \'https://i.imgur.com/\'\n                });\n\n              case 3:\n                data = _context4.sent;\n\n                _this4.twitterSetAvatar({\n                  avatarUrl: data.text\n                });\n\n                _context4.next = 11;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4["catch"](0);\n                _context4.next = 11;\n                return _this4.$phoneAPI.log(_context4.t0);\n\n              case 11:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }))();\n    },\n    login: function login() {\n      this.twitterLogin({\n        username: this.localAccount.username,\n        password: this.localAccount.password\n      });\n      this.state = STATES.MENU;\n    },\n    logout: function logout() {\n      this.twitterLogout();\n    },\n    createAccount: function createAccount() {\n      if (this.validAccount === true) {\n        this.twitterCreateNewAccount(this.localAccount);\n        this.localAccount = {\n          username: \'\',\n          password: \'\',\n          passwordConfirm: \'\',\n          avatarUrl: null\n        };\n        this.state = this.STATES.MENU;\n      }\n    },\n    cancel: function cancel() {\n      this.state = STATES.MENU;\n    },\n    setNotification: function setNotification(value) {\n      this.setTwitterNotification(value);\n    },\n    setNotificationSound: function setNotificationSound(value) {\n      this.setTwitterNotificationSound(value);\n    },\n    changePassword: function changePassword() {\n      var _this5 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee5() {\n        var password1, password2;\n        return regenerator_default().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  limit: 30\n                });\n\n              case 3:\n                password1 = _context5.sent;\n\n                if (!(password1.text === \'\')) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt("return");\n\n              case 6:\n                _context5.next = 8;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  limit: 30\n                });\n\n              case 8:\n                password2 = _context5.sent;\n\n                if (!(password2.text === \'\')) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                return _context5.abrupt("return");\n\n              case 11:\n                if (!(password2.text !== password1.text)) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                _this5.$notify({\n                  title: _this5.IntlString(\'APP_TWITTER_NAME\'),\n                  message: _this5.IntlString(\'APP_TWITTER_NOTIF_NEW_PASSWORD_MISS_MATCH\'),\n                  icon: \'twitter\',\n                  backgroundColor: \'#e0245e80\'\n                });\n\n                return _context5.abrupt("return");\n\n              case 16:\n                if (!(password2.text.length < 6)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                _this5.$notify({\n                  title: _this5.IntlString(\'APP_TWITTER_NAME\'),\n                  message: _this5.IntlString(\'APP_TWITTER_NOTIF_NEW_PASSWORD_LENGTH_ERROR\'),\n                  icon: \'twitter\',\n                  backgroundColor: \'#e0245e80\'\n                });\n\n                return _context5.abrupt("return");\n\n              case 19:\n                _this5.twitterChangePassword(password2.text);\n\n                _context5.next = 25;\n                break;\n\n              case 22:\n                _context5.prev = 22;\n                _context5.t0 = _context5["catch"](0);\n                console.error(_context5.t0);\n\n              case 25:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 22]]);\n      }))();\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterAccount.vue?vue&type=script&lang=js&\n /* harmony default export */ var twitter_TwitterAccountvue_type_script_lang_js_ = (TwitterAccountvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/twitter/TwitterAccount.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar TwitterAccount_component = (0,componentNormalizer/* default */.Z)(\n  twitter_TwitterAccountvue_type_script_lang_js_,\n  TwitterAccountvue_type_template_id_49bed54b_scoped_true_render,\n  TwitterAccountvue_type_template_id_49bed54b_scoped_true_staticRenderFns,\n  false,\n  null,\n  "49bed54b",\n  null\n  \n)\n\n/* harmony default export */ var TwitterAccount = (TwitterAccount_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterTopTweet.vue?vue&type=template&id=1a30ef80&scoped=true&\nvar TwitterTopTweetvue_type_template_id_1a30ef80_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_content",staticStyle:{"width":"326px","height":"743px"}},[(_vm.imgZoom !== undefined)?_c(\'div\',{staticClass:"img-fullscreen",on:{"click":function($event){$event.stopPropagation();_vm.imgZoom = undefined}}},[_c(\'img\',{attrs:{"src":_vm.imgZoom,"alt":""}})]):_vm._e(),_vm._v(" "),_c(\'div\',{ref:"elementsDiv",staticClass:"tweets-wrapper"},_vm._l((_vm.tweets),function(tweet,key){return _c(\'div\',{key:tweet.id,staticClass:"tweet",class:{ select: key === _vm.selectMessage}},[_c(\'div\',{staticClass:"tweet-img"},[_c(\'img\',{staticStyle:{"max-width":"48px","max-height":"48px"},attrs:{"src":tweet.authorIcon || \'https://i.imgur.com/pE20YaL.png\'}})]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-content"},[_c(\'div\',{staticClass:"tweet-head"},[_c(\'div\',{staticClass:"tweet-head-author"},[_vm._v("\\n            "+_vm._s(tweet.author)+"\\n          ")]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-head-time"},[_vm._v("\\n            "+_vm._s(_vm.formatTime(tweet.time))+"\\n          ")])]),_vm._v(" "),_c(\'div\',{staticClass:"tweet-message"},[(!_vm.isImage(tweet.message))?[_vm._v("\\n            "+_vm._s(tweet.message)+"\\n          ")]:_c(\'img\',{staticClass:"tweet-attachement-img",attrs:{"alt":"","src":tweet.message},on:{"click":function($event){$event.stopPropagation();_vm.imgZoom = tweet.message}}})],2),_vm._v(" "),_c(\'div\',{staticClass:"tweet-like"},[_c(\'div\',{staticClass:"item svgreply",on:{"click":function($event){$event.stopPropagation();return _vm.reply(tweet)}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.reply(tweet)}}},[_c(\'path\',{attrs:{"fill":"none","d":"M0 0h24v24H0V0z"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"}})])]),_vm._v(" "),_c(\'div\',{staticClass:"item"},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"}})])]),_vm._v(" "),(tweet.isLikes)?_c(\'div\',{staticClass:"item svgdislike",on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}})]),_vm._v(" "),_c(\'span\',{on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_vm._v(_vm._s(tweet.likes))])]):_c(\'div\',{staticClass:"svglike",on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"},on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_c(\'path\',{attrs:{"d":"M0 0h24v24H0z","fill":"none"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}})]),_vm._v(" "),_c(\'span\',{on:{"click":function($event){$event.stopPropagation();return _vm.twitterToogleLike({ tweetId: tweet.id })}}},[_vm._v(_vm._s(tweet.likes))])]),_vm._v(" "),_c(\'div\',{staticClass:"item"},[_c(\'svg\',{attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24"}},[_c(\'path\',{attrs:{"fill":"none","d":"M0 0h24v24H0V0z"}}),_vm._v(" "),_c(\'path\',{attrs:{"d":"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"}})])])])])])}),0)])}\nvar TwitterTopTweetvue_type_template_id_1a30ef80_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterTopTweet.vue?vue&type=script&lang=js&\n\n\n\n\n\nfunction TwitterTopTweetvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction TwitterTopTweetvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TwitterTopTweetvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TwitterTopTweetvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var TwitterTopTweetvue_type_script_lang_js_ = ({\n  components: {},\n  data: function data() {\n    return {\n      selectMessage: -1,\n      ignoreControls: false,\n      imgZoom: undefined\n    };\n  },\n  computed: TwitterTopTweetvue_type_script_lang_js_objectSpread(TwitterTopTweetvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'favoriteTweets\', \'IntlString\', \'useMouse\'])), {}, {\n    tweets: function tweets() {\n      return this.favoriteTweets;\n    }\n  }),\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpArrowDown\', this.onDown);\n      this.$bus.$on(\'keyUpArrowUp\', this.onUp);\n      this.$bus.$on(\'keyUpEnter\', this.onEnter);\n    }\n\n    this.$bus.$on(\'keyUpBackspace\', this.onBack);\n  },\n  mounted: function mounted() {\n    this.fetchFavoriteTweets();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpArrowDown\', this.onDown);\n    this.$bus.$off(\'keyUpArrowUp\', this.onUp);\n    this.$bus.$off(\'keyUpEnter\', this.onEnter);\n    this.$bus.$off(\'keyUpBackspace\', this.onBack);\n  },\n  methods: TwitterTopTweetvue_type_script_lang_js_objectSpread(TwitterTopTweetvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapActions */.nv)([\'twitterLogin\', \'twitterPostTweet\', \'twitterToogleLike\', \'fetchFavoriteTweets\'])), {}, {\n    showOption: function showOption() {\n      var _this = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        var tweet, optionsChoix, choix;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.ignoreControls = true;\n                tweet = _this.tweets[_this.selectMessage];\n                optionsChoix = [{\n                  id: 1,\n                  title: \'Like / Unlike\',\n                  icons: \'fa-heart\'\n                }, {\n                  id: 2,\n                  title: \'Répondre\',\n                  icons: \'fa-reply\'\n                }, {\n                  id: -1,\n                  title: _this.IntlString(\'CANCEL\'),\n                  icons: \'fa-undo\'\n                }];\n\n                if (_this.isImage(tweet.message)) {\n                  optionsChoix = [{\n                    id: 3,\n                    title: _this.IntlString(\'APP_MESSAGE_ZOOM_IMG\'),\n                    icons: \'fa-search\'\n                  }].concat((0,toConsumableArray/* default */.Z)(optionsChoix));\n                }\n\n                _context.next = 6;\n                return Modal/* default.CreateModal */.Z.CreateModal({\n                  choix: optionsChoix\n                });\n\n              case 6:\n                choix = _context.sent;\n                _this.ignoreControls = false;\n                _context.t0 = choix.id;\n                _context.next = _context.t0 === 1 ? 11 : _context.t0 === 2 ? 13 : _context.t0 === 3 ? 16 : 18;\n                break;\n\n              case 11:\n                _this.twitterToogleLike({\n                  tweetId: tweet.id\n                });\n\n                return _context.abrupt("break", 18);\n\n              case 13:\n                _context.next = 15;\n                return _this.reply(tweet);\n\n              case 15:\n                return _context.abrupt("break", 18);\n\n              case 16:\n                _this.imgZoom = tweet.message;\n                return _context.abrupt("break", 18);\n\n              case 18:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    isImage: function isImage(mess) {\n      return /^https?:\\/\\/.*\\.(png|jpg|jpeg|gif)/.test(mess);\n    },\n    reply: function reply(tweet) {\n      var _this2 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var authorName, rep, message;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                authorName = tweet.author;\n                _context2.prev = 1;\n                _this2.ignoreControls = true;\n                _context2.next = 5;\n                return Modal/* default.CreateTextModal */.Z.CreateTextModal({\n                  title: \'Répondre\',\n                  text: "@".concat(authorName, " ")\n                });\n\n              case 5:\n                rep = _context2.sent;\n\n                if (rep !== undefined && rep.text !== undefined) {\n                  message = rep.text.trim();\n\n                  if (message.length !== 0) {\n                    _this2.twitterPostTweet({\n                      message: message\n                    });\n                  }\n                }\n\n              case 7:\n                _context2.prev = 7;\n                _this2.ignoreControls = false;\n                return _context2.finish(7);\n\n              case 10:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1,, 7, 10]]);\n      }))();\n    },\n    resetScroll: function resetScroll() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        var elem = document.querySelector(\'#tweets\');\n        elem.scrollTop = elem.scrollHeight;\n        _this3.selectMessage = -1;\n      });\n    },\n    scrollIntoViewIfNeeded: function scrollIntoViewIfNeeded() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        var elem = _this4.$el.querySelector(\'.select\');\n\n        if (elem !== null) {\n          elem.scrollIntoViewIfNeeded();\n        }\n      });\n    },\n    onUp: function onUp() {\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage === -1) {\n        this.selectMessage = 0;\n      } else {\n        this.selectMessage = this.selectMessage === 0 ? 0 : this.selectMessage - 1;\n      }\n\n      this.scrollIntoViewIfNeeded();\n    },\n    onDown: function onDown() {\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage === -1) {\n        this.selectMessage = 0;\n      } else {\n        this.selectMessage = this.selectMessage === this.tweets.length - 1 ? this.selectMessage : this.selectMessage + 1;\n      }\n\n      this.scrollIntoViewIfNeeded();\n    },\n    onEnter: function onEnter() {\n      var _this5 = this;\n\n      return (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3() {\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(_this5.ignoreControls === true)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt("return");\n\n              case 2:\n                if (!(_this5.selectMessage !== -1)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _this5.showOption();\n\n              case 5:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    onBack: function onBack() {\n      if (this.imgZoom !== undefined) {\n        this.imgZoom = undefined;\n        return;\n      }\n\n      if (this.ignoreControls === true) return;\n\n      if (this.selectMessage !== -1) {\n        this.selectMessage = -1;\n      } else {\n        this.$bus.$emit(\'twitterHome\');\n      }\n    },\n    formatTime: function formatTime(time) {\n      var d = new Date(time);\n      return d.toLocaleTimeString();\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterTopTweet.vue?vue&type=script&lang=js&\n /* harmony default export */ var twitter_TwitterTopTweetvue_type_script_lang_js_ = (TwitterTopTweetvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/twitter/TwitterTopTweet.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar TwitterTopTweet_component = (0,componentNormalizer/* default */.Z)(\n  twitter_TwitterTopTweetvue_type_script_lang_js_,\n  TwitterTopTweetvue_type_template_id_1a30ef80_scoped_true_render,\n  TwitterTopTweetvue_type_template_id_1a30ef80_scoped_true_staticRenderFns,\n  false,\n  null,\n  "1a30ef80",\n  null\n  \n)\n\n/* harmony default export */ var TwitterTopTweet = (TwitterTopTweet_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/twitter/TwitterScreen.vue?vue&type=script&lang=js&\n\n\nfunction TwitterScreenvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction TwitterScreenvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TwitterScreenvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TwitterScreenvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var TwitterScreenvue_type_script_lang_js_ = ({\n  components: {\n    PhoneTitle: PhoneTitle/* default */.Z\n  },\n  data: function data() {\n    return {\n      currentScreenIndex: 0\n    };\n  },\n  computed: TwitterScreenvue_type_script_lang_js_objectSpread(TwitterScreenvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'IntlString\', \'useMouse\'])), {}, {\n    screen: function screen() {\n      return [{\n        title: this.IntlString(\'APP_TWITTER_VIEW_TWITTER\'),\n        component: TwitterView,\n        icon: \'home\'\n      }, {\n        title: this.IntlString(\'APP_TWITTER_VIEW_TOP_TWEETS\'),\n        component: TwitterTopTweet,\n        icon: \'heart\'\n      }, {\n        title: this.IntlString(\'APP_TWITTER_VIEW_TWEETER\'),\n        component: TwitterPostTweet,\n        icon: \'comment\'\n      }, {\n        title: this.IntlString(\'APP_TWITTER_VIEW_SETTING\'),\n        component: TwitterAccount,\n        icon: \'cog\'\n      }];\n    },\n    currentScreen: function currentScreen() {\n      return this.screen[this.currentScreenIndex];\n    }\n  }),\n  watch: {},\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpArrowLeft\', this.onLeft);\n      this.$bus.$on(\'keyUpArrowRight\', this.onRight);\n    }\n\n    this.$bus.$on(\'twitterHome\', this.home);\n  },\n  mounted: function mounted() {},\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpArrowLeft\', this.onLeft);\n    this.$bus.$off(\'keyUpArrowRight\', this.onRight);\n    this.$bus.$off(\'twitterHome\', this.home);\n  },\n  methods: {\n    onLeft: function onLeft() {\n      this.currentScreenIndex = Math.max(0, this.currentScreenIndex - 1);\n    },\n    onRight: function onRight() {\n      this.currentScreenIndex = Math.min(this.screen.length - 1, this.currentScreenIndex + 1);\n    },\n    home: function home() {\n      this.currentScreenIndex = 0;\n    },\n    openMenu: function openMenu(index) {\n      this.currentScreenIndex = index;\n    },\n    quit: function quit() {\n      if (this.currentScreenIndex === 0) {\n        this.$router.push({\n          name: \'home\'\n        });\n      } else {\n        this.currentScreenIndex = 0;\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/twitter/TwitterScreen.vue?vue&type=script&lang=js&\n /* harmony default export */ var twitter_TwitterScreenvue_type_script_lang_js_ = (TwitterScreenvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/twitter/TwitterScreen.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar TwitterScreen_component = (0,componentNormalizer/* default */.Z)(\n  twitter_TwitterScreenvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "7e25cb61",\n  null\n  \n)\n\n/* harmony default export */ var TwitterScreen = (TwitterScreen_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4365\n')}}]);