(self.webpackChunksrc_htmlphone=self.webpackChunksrc_htmlphone||[]).push([[4410],{4410:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ components_Modal; }\n});\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(538);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Modal/Modal.vue?vue&type=template&id=29b4327b&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"modal\"}},[_c('div',{staticClass:\"modal-mask\",on:{\"click\":function($event){$event.stopPropagation();return _vm.cancel($event)}}},[_c('div',{staticClass:\"modal-container\"},_vm._l((_vm.choix),function(val,index){return _c('div',{key:index,staticClass:\"modal-choix\",class:{ select: index === _vm.currentSelect},style:({color: val.color}),on:{\"click\":function($event){$event.stopPropagation();return _vm.selectItem(val)}}},[_c('div',{staticClass:\"fa-icon\"},[_c('FontAwesomeIcon',{attrs:{\"icon\":['fas', val.icons]},on:{\"click\":function($event){$event.stopPropagation();return _vm.selectItem(val)}}}),_vm._v(\" \"+_vm._s(val.title)+\"\\n        \")],1)])}),0)])])}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./src/store/index.js + 10 modules\nvar store = __webpack_require__(7776);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Modal/Modal.vue?vue&type=script&lang=js&\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var Modalvue_type_script_lang_js_ = ({\n  name: 'Modal',\n  store: store/* default */.Z,\n  props: {\n    choix: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currentSelect: 0\n    };\n  },\n  computed: _objectSpread({}, (0,vuex_esm/* mapGetters */.Se)(['useMouse'])),\n  created: function created() {\n    if (!this.useMouse) {\n      this.$bus.$on('keyUpArrowDown', this.onDown);\n      this.$bus.$on('keyUpArrowUp', this.onUp);\n      this.$bus.$on('keyUpEnter', this.onEnter);\n    } else {\n      this.currentSelect = -1;\n    }\n\n    this.$bus.$on('keyUpBackspace', this.cancel);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off('keyUpArrowDown', this.onDown);\n    this.$bus.$off('keyUpArrowUp', this.onUp);\n    this.$bus.$off('keyUpEnter', this.onEnter);\n    this.$bus.$off('keyUpBackspace', this.cancel);\n  },\n  methods: {\n    scrollIntoViewIfNeeded: function scrollIntoViewIfNeeded() {\n      this.$nextTick(function () {\n        document.querySelector('.modal-choix.select').scrollIntoViewIfNeeded();\n      });\n    },\n    onUp: function onUp() {\n      this.currentSelect = this.currentSelect === 0 ? 0 : this.currentSelect - 1;\n      this.scrollIntoViewIfNeeded();\n    },\n    onDown: function onDown() {\n      this.currentSelect = this.currentSelect === this.choix.length - 1 ? this.currentSelect : this.currentSelect + 1;\n      this.scrollIntoViewIfNeeded();\n    },\n    selectItem: function selectItem(elem) {\n      this.$emit('select', elem);\n    },\n    onEnter: function onEnter() {\n      this.$emit('select', this.choix[this.currentSelect]);\n    },\n    cancel: function cancel() {\n      this.$emit('cancel');\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/Modal/Modal.vue?vue&type=script&lang=js&\n /* harmony default export */ var Modal_Modalvue_type_script_lang_js_ = (Modalvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./src/components/Modal/Modal.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  Modal_Modalvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29b4327b\",\n  null\n  \n)\n\n/* harmony default export */ var Modal = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Modal/TextModal.vue?vue&type=template&id=112d0497&scoped=true&\nvar TextModalvue_type_template_id_112d0497_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"modal\"}},[_c('div',{staticClass:\"modal-mask\"},[_c('div',{staticClass:\"modal-container\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('h2',{style:({color: _vm.color})},[_vm._v(\"\\n        \"+_vm._s(_vm.title)+\"\\n      \")]),_vm._v(\" \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputText),expression:\"inputText\"}],ref:\"textarea\",staticClass:\"modal-textarea\",class:{oneline: _vm.limit <= 18},style:({borderColor: _vm.color}),attrs:{\"maxlength\":_vm.limit},domProps:{\"value\":(_vm.inputText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.inputText=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"botton-container\"},[_c('button',{style:({color: _vm.color}),on:{\"click\":_vm.cancel}},[_vm._v(\"\\n          \"+_vm._s(_vm.IntlString('CANCEL'))+\"\\n        \")]),_vm._v(\" \"),_c('button',{style:({color: _vm.color}),on:{\"click\":_vm.valide}},[_vm._v(\"\\n          \"+_vm._s(_vm.IntlString('OK'))+\"\\n        \")])])])])])}\nvar TextModalvue_type_template_id_112d0497_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Modal/TextModal.vue?vue&type=script&lang=js&\n\n\nfunction TextModalvue_type_script_lang_js_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction TextModalvue_type_script_lang_js_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { TextModalvue_type_script_lang_js_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { TextModalvue_type_script_lang_js_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ var TextModalvue_type_script_lang_js_ = ({\n  name: 'TextModal',\n  store: store/* default */.Z,\n  props: {\n    title: {\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    },\n    text: {\n      type: String,\n      default: function _default() {\n        return '';\n      }\n    },\n    limit: {\n      type: Number,\n      default: 255\n    }\n  },\n  data: function data() {\n    return {\n      inputText: ''\n    };\n  },\n  computed: TextModalvue_type_script_lang_js_objectSpread(TextModalvue_type_script_lang_js_objectSpread({}, (0,vuex_esm/* mapGetters */.Se)(['IntlString', 'themeColor'])), {}, {\n    color: function color() {\n      return this.themeColor || '#2A56C6';\n    }\n  }),\n  created: function created() {\n    this.inputText = this.text;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.$refs.textarea.focus();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {},\n  methods: {\n    scrollIntoViewIfNeeded: function scrollIntoViewIfNeeded() {\n      this.$nextTick(function () {\n        document.querySelector('.modal-choix.select').scrollIntoViewIfNeeded();\n      });\n    },\n    onUp: function onUp() {\n      this.currentSelect = this.currentSelect === 0 ? 0 : this.currentSelect - 1;\n      this.scrollIntoViewIfNeeded();\n    },\n    onDown: function onDown() {\n      this.currentSelect = this.currentSelect === this.choix.length - 1 ? this.currentSelect : this.currentSelect + 1;\n      this.scrollIntoViewIfNeeded();\n    },\n    selectItem: function selectItem(elem) {\n      this.$emit('select', elem);\n    },\n    onEnter: function onEnter() {\n      this.$emit('select', this.choix[this.currentSelect]);\n    },\n    cancel: function cancel() {\n      this.$emit('cancel');\n    },\n    valide: function valide() {\n      this.$emit('valid', {\n        text: this.inputText\n      });\n    }\n  }\n});\n;// CONCATENATED MODULE: ./src/components/Modal/TextModal.vue?vue&type=script&lang=js&\n /* harmony default export */ var Modal_TextModalvue_type_script_lang_js_ = (TextModalvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./src/components/Modal/TextModal.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar TextModal_component = (0,componentNormalizer/* default */.Z)(\n  Modal_TextModalvue_type_script_lang_js_,\n  TextModalvue_type_template_id_112d0497_scoped_true_render,\n  TextModalvue_type_template_id_112d0497_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"112d0497\",\n  null\n  \n)\n\n/* harmony default export */ var TextModal = (TextModal_component.exports);\n// EXTERNAL MODULE: ./src/PhoneAPI.js + 2 modules\nvar PhoneAPI = __webpack_require__(9265);\n;// CONCATENATED MODULE: ./src/components/Modal/index.js\n\n\n\n\n\n/* harmony default export */ var components_Modal = ({\n  CreateModal: function CreateModal() {\n    var propsData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new Promise(function (resolve) {\n      var modal = new (vue_esm/* default.extend */.Z.extend(Modal))({\n        el: document.createElement('div'),\n        propsData: propsData\n      });\n      document.querySelector('#app').appendChild(modal.$el);\n      modal.$on('select', function (data) {\n        resolve(data);\n        modal.$el.parentNode.removeChild(modal.$el);\n        modal.$destroy();\n      });\n      modal.$on('cancel', function () {\n        resolve({\n          title: 'cancel'\n        });\n        modal.$el.parentNode.removeChild(modal.$el);\n        modal.$destroy();\n      });\n    });\n  },\n  CreateTextModal: function CreateTextModal() {\n    var _this = this;\n\n    var propsData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (store/* default.getters.useMouse */.Z.getters.useMouse === false) {\n      return PhoneAPI/* default.getReponseText */.Z.getReponseText(propsData);\n    }\n\n    return new Promise(function (resolve, reject) {\n      var modal = new (vue_esm/* default.extend */.Z.extend(TextModal))({\n        el: document.createElement('div'),\n        propsData: propsData\n      });\n      document.querySelector('#app').appendChild(modal.$el);\n      modal.$on('valid', function (data) {\n        resolve(data);\n        modal.$el.parentNode.removeChild(modal.$el);\n        modal.$destroy();\n      });\n      modal.$on('cancel', function () {\n        reject('UserCancel');\n        modal.$el.parentNode.removeChild(modal.$el);\n        modal.$destroy();\n      });\n    }).catch(function () {\n      return _this.$phoneAPI.log('UserCancel');\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4410\n")}}]);