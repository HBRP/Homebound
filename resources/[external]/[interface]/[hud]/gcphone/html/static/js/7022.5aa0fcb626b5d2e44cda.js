(self.webpackChunksrc_htmlphone=self.webpackChunksrc_htmlphone||[]).push([[7022],{7022:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ Contact; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/contacts/Contact.vue?vue&type=template&id=5ddb7328&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"phone_app",staticStyle:{"width":"326px","height":"743px"}},[_c(\'PhoneTitle\',{attrs:{"title":_vm.IntlString(\'APP_CONTACT_NEW\')},on:{"back":_vm.forceCancel}}),_vm._v(" "),_c(\'div\',{staticClass:"content inputText"},[_c(\'div\',{staticClass:"group select",attrs:{"data-type":"text","data-model":"display","data-maxlength":"64"}},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.contact.display),expression:"contact.display"},{name:"autofocus",rawName:"v-autofocus"}],attrs:{"id":"contact-display","type":"text","maxlength":"64"},domProps:{"value":(_vm.contact.display)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.contact, "display", $event.target.value)}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"contact-display"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_CONTACT_LABEL_NAME\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group inputText",attrs:{"data-type":"text","data-model":"number","data-maxlength":"12"}},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.contact.number),expression:"contact.number"}],attrs:{"id":"contact-number","type":"text","maxlength":"12"},domProps:{"value":(_vm.contact.number)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.contact, "number", $event.target.value)}}}),_vm._v(" "),_c(\'span\',{staticClass:"highlight"}),_vm._v(" "),_c(\'span\',{staticClass:"bar"}),_vm._v(" "),_c(\'label\',{attrs:{"for":"contact-number"}},[_vm._v(_vm._s(_vm.IntlString(\'APP_CONTACT_LABEL_NUMBER\')))])]),_vm._v(" "),_c(\'div\',{staticClass:"group ",staticStyle:{"margin-top":"23px","width":"263px","margin-left":"23px"},attrs:{"data-type":"button","data-action":"save"},on:{"click":function($event){$event.stopPropagation();return _vm.save($event)}}},[_c(\'input\',{staticClass:"btn btn-green",staticStyle:{"font-weight":"100"},attrs:{"type":"button","value":_vm.IntlString(\'APP_CONTACT_SAVE\')},on:{"click":function($event){$event.stopPropagation();return _vm.save($event)}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",staticStyle:{"margin-top":"23px","width":"263px","margin-left":"23px"},attrs:{"data-type":"button","data-action":"cancel"},on:{"click":function($event){$event.stopPropagation();return _vm.forceCancel($event)}}},[_c(\'input\',{staticClass:"btn btn-orange",staticStyle:{"font-weight":"100"},attrs:{"type":"button","value":_vm.IntlString(\'APP_CONTACT_CANCEL\')},on:{"click":function($event){$event.stopPropagation();return _vm.forceCancel($event)}}})]),_vm._v(" "),_c(\'div\',{staticClass:"group",staticStyle:{"margin-top":"23px","width":"263px","margin-left":"23px"},attrs:{"data-type":"button","data-action":"deleteC"},on:{"click":function($event){$event.stopPropagation();return _vm.deleteC($event)}}},[_c(\'input\',{staticClass:"btn btn-red",staticStyle:{"font-weight":"100"},attrs:{"type":"button","value":_vm.IntlString(\'APP_CONTACT_DELETE\')},on:{"click":function($event){$event.stopPropagation();return _vm.deleteC($event)}}})])])],1)}\nvar staticRenderFns = []\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(6156);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./src/components/PhoneTitle.vue + 3 modules\nvar PhoneTitle = __webpack_require__(5317);\n// EXTERNAL MODULE: ./src/components/Modal/index.js + 8 modules\nvar Modal = __webpack_require__(4410);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/contacts/Contact.vue?vue&type=script&lang=js&\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var Contactvue_type_script_lang_js_ = ({\n  components: {\n    PhoneTitle: PhoneTitle/* default */.Z\n  },\n  data: function data() {\n    return {\n      id: -1,\n      currentSelect: 0,\n      ignoreControls: false,\n      contact: {\n        display: \'\',\n        number: \'\',\n        id: -1\n      }\n    };\n  },\n  computed: _objectSpread({}, (0,vuex_esm/* mapGetters */.Se)([\'IntlString\', \'contacts\', \'useMouse\'])),\n  created: function created() {\n    var _this = this;\n\n    if (!this.useMouse) {\n      this.$bus.$on(\'keyUpArrowDown\', this.onDown);\n      this.$bus.$on(\'keyUpArrowUp\', this.onUp);\n      this.$bus.$on(\'keyUpEnter\', this.onEnter);\n    } else {\n      this.currentSelect = -1;\n    }\n\n    this.$bus.$on(\'keyUpBackspace\', this.cancel);\n    this.id = parseInt(this.$route.params.id);\n    this.contact.number = this.$route.params.number;\n\n    if (this.id !== -1) {\n      var c = this.contacts.find(function (e) {\n        return e.id === _this.id;\n      });\n\n      if (c !== undefined) {\n        this.contact = {\n          id: c.id,\n          display: c.display,\n          number: c.number\n        };\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\'keyUpArrowDown\', this.onDown);\n    this.$bus.$off(\'keyUpArrowUp\', this.onUp);\n    this.$bus.$off(\'keyUpEnter\', this.onEnter);\n    this.$bus.$off(\'keyUpBackspace\', this.cancel);\n  },\n  methods: _objectSpread(_objectSpread({}, (0,vuex_esm/* mapActions */.nv)([\'updateContact\', \'addContact\'])), {}, {\n    onUp: function onUp() {\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n\n      if (select.previousElementSibling !== null) {\n        document.querySelectorAll(\'.group\').forEach(function (elem) {\n          elem.classList.remove(\'select\');\n        });\n        select.previousElementSibling.classList.add(\'select\');\n        var i = select.previousElementSibling.querySelector(\'input\');\n\n        if (i !== null) {\n          i.focus();\n        }\n      }\n    },\n    onDown: function onDown() {\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n\n      if (select.nextElementSibling !== null) {\n        document.querySelectorAll(\'.group\').forEach(function (elem) {\n          elem.classList.remove(\'select\');\n        });\n        select.nextElementSibling.classList.add(\'select\');\n        var i = select.nextElementSibling.querySelector(\'input\');\n\n        if (i !== null) {\n          i.focus();\n        }\n      }\n    },\n    onEnter: function onEnter() {\n      var _this2 = this;\n\n      if (this.ignoreControls === true) return;\n      var select = document.querySelector(\'.group.select\');\n\n      if (select.dataset.type === \'text\') {\n        var options = {\n          limit: parseInt(select.dataset.maxlength) || 64,\n          text: this.contact[select.dataset.model] || \'\'\n        };\n        this.$phoneAPI.getReponseText(options).then(function (data) {\n          _this2.contact[select.dataset.model] = data.text;\n        });\n      }\n\n      if (select.dataset.action && this[select.dataset.action]) {\n        this[select.dataset.action]();\n      }\n    },\n    save: function save() {\n      if (this.id === -1 || this.id === 0) {\n        this.addContact({\n          display: this.contact.display,\n          number: this.contact.number\n        });\n      } else {\n        this.updateContact({\n          id: this.id,\n          display: this.contact.display,\n          number: this.contact.number\n        });\n      }\n\n      history.back();\n    },\n    cancel: function cancel() {\n      if (this.ignoreControls === true) return;\n      if (this.useMouse === true && document.activeElement.tagName !== \'BODY\') return;\n      history.back();\n    },\n    forceCancel: function forceCancel() {\n      history.back();\n    },\n    deleteC: function deleteC() {\n      var _this3 = this;\n\n      if (this.id !== -1) {\n        this.ignoreControls = true;\n        var choix = [{\n          title: \'Annuler\'\n        }, {\n          title: \'Annuler\'\n        }, {\n          title: \'Supprimer\',\n          color: \'red\'\n        }, {\n          title: \'Annuler\'\n        }, {\n          title: \'Annuler\'\n        }];\n        Modal/* default.CreateModal */.Z.CreateModal({\n          choix: choix\n        }).then(function (reponse) {\n          _this3.ignoreControls = false;\n\n          if (reponse.title === \'Supprimer\') {\n            _this3.$phoneAPI.deleteContact(_this3.id);\n\n            history.back();\n          }\n        });\n      } else {\n        history.back();\n      }\n    }\n  })\n});\n;// CONCATENATED MODULE: ./src/components/contacts/Contact.vue?vue&type=script&lang=js&\n /* harmony default export */ var contacts_Contactvue_type_script_lang_js_ = (Contactvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./src/components/contacts/Contact.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = (0,componentNormalizer/* default */.Z)(\n  contacts_Contactvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "5ddb7328",\n  null\n  \n)\n\n/* harmony default export */ var Contact = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7022\n')}}]);