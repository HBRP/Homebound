(self.webpackChunksrc_htmlphone=self.webpackChunksrc_htmlphone||[]).push([[3240],{1311:function(module,__unused_webpack_exports,__webpack_require__){eval("(function () {\r\n\r\n    /**\r\n     * Install plugin\r\n     * @param Vue\r\n     * @param options\r\n     */\r\n\r\n    function plugin(Vue, options) {\r\n\r\n        /*\r\n         * Check if plugin is already installed\r\n         */\r\n        if (plugin.installed) {\r\n            console.warn('It seems like you\\'re trying to install vue-units twice.')\r\n            return;\r\n        }\r\n        plugin.installed = true;\r\n\r\n        /*\r\n         * Override the convert-units plugin, if another is defined\r\n         */\r\n        var units = options && options.units ? options.units : __webpack_require__(3381);\r\n\r\n        /*\r\n         * Make the instance of convert-units available on the vue instance\r\n         * using this.$units.\r\n         */\r\n        Object.defineProperties(Vue.prototype, {\r\n            $units: {\r\n                get: function () {\r\n                    return units;\r\n                }\r\n            }\r\n        });\r\n\r\n        /*\r\n         * Make the instance of convert units available on the global\r\n         * Vue instance.\r\n         */\r\n        Vue.units = units;\r\n\r\n        /*\r\n         * Add a simple filter for converting units\r\n         */\r\n        Vue.filter('units', function (value, from, to, includeLabel) {\r\n            try {\r\n                return units(value).from(from).to(to) + (includeLabel ? ' ' + to : '');\r\n            } catch (err) {\r\n                // Prevent Vue from crashing if incorrect metrics are provided\r\n                // and simply return the original value instead.\r\n                console.error(err);\r\n                return value + (includeLabel ? ' ' + from : '');\r\n            }\r\n        });\r\n    }\r\n\r\n    if (true) {\r\n        module.exports = plugin\r\n    } else {}\r\n\r\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zcmNfaHRtbHBob25lLy4vbm9kZV9tb2R1bGVzL3Z1ZS11bml0cy92dWUtdW5pdHMuanM/M2E5MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG1CQUFPLENBQUMsSUFBZTs7QUFFdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUEsUUFBUSxJQUEwQjtBQUNsQztBQUNBLEtBQUssTUFBTSxFQUlOOztBQUVMLENBQUMiLCJmaWxlIjoiMTMxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbnN0YWxsIHBsdWdpblxyXG4gICAgICogQHBhcmFtIFZ1ZVxyXG4gICAgICogQHBhcmFtIG9wdGlvbnNcclxuICAgICAqL1xyXG5cclxuICAgIGZ1bmN0aW9uIHBsdWdpbihWdWUsIG9wdGlvbnMpIHtcclxuXHJcbiAgICAgICAgLypcclxuICAgICAgICAgKiBDaGVjayBpZiBwbHVnaW4gaXMgYWxyZWFkeSBpbnN0YWxsZWRcclxuICAgICAgICAgKi9cclxuICAgICAgICBpZiAocGx1Z2luLmluc3RhbGxlZCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0l0IHNlZW1zIGxpa2UgeW91XFwncmUgdHJ5aW5nIHRvIGluc3RhbGwgdnVlLXVuaXRzIHR3aWNlLicpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGx1Z2luLmluc3RhbGxlZCA9IHRydWU7XHJcblxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogT3ZlcnJpZGUgdGhlIGNvbnZlcnQtdW5pdHMgcGx1Z2luLCBpZiBhbm90aGVyIGlzIGRlZmluZWRcclxuICAgICAgICAgKi9cclxuICAgICAgICB2YXIgdW5pdHMgPSBvcHRpb25zICYmIG9wdGlvbnMudW5pdHMgPyBvcHRpb25zLnVuaXRzIDogcmVxdWlyZSgnY29udmVydC11bml0cycpO1xyXG5cclxuICAgICAgICAvKlxyXG4gICAgICAgICAqIE1ha2UgdGhlIGluc3RhbmNlIG9mIGNvbnZlcnQtdW5pdHMgYXZhaWxhYmxlIG9uIHRoZSB2dWUgaW5zdGFuY2VcclxuICAgICAgICAgKiB1c2luZyB0aGlzLiR1bml0cy5cclxuICAgICAgICAgKi9cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhWdWUucHJvdG90eXBlLCB7XHJcbiAgICAgICAgICAgICR1bml0czoge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuaXRzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogTWFrZSB0aGUgaW5zdGFuY2Ugb2YgY29udmVydCB1bml0cyBhdmFpbGFibGUgb24gdGhlIGdsb2JhbFxyXG4gICAgICAgICAqIFZ1ZSBpbnN0YW5jZS5cclxuICAgICAgICAgKi9cclxuICAgICAgICBWdWUudW5pdHMgPSB1bml0cztcclxuXHJcbiAgICAgICAgLypcclxuICAgICAgICAgKiBBZGQgYSBzaW1wbGUgZmlsdGVyIGZvciBjb252ZXJ0aW5nIHVuaXRzXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgVnVlLmZpbHRlcigndW5pdHMnLCBmdW5jdGlvbiAodmFsdWUsIGZyb20sIHRvLCBpbmNsdWRlTGFiZWwpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB1bml0cyh2YWx1ZSkuZnJvbShmcm9tKS50byh0bykgKyAoaW5jbHVkZUxhYmVsID8gJyAnICsgdG8gOiAnJyk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy8gUHJldmVudCBWdWUgZnJvbSBjcmFzaGluZyBpZiBpbmNvcnJlY3QgbWV0cmljcyBhcmUgcHJvdmlkZWRcclxuICAgICAgICAgICAgICAgIC8vIGFuZCBzaW1wbHkgcmV0dXJuIHRoZSBvcmlnaW5hbCB2YWx1ZSBpbnN0ZWFkLlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlICsgKGluY2x1ZGVMYWJlbCA/ICcgJyArIGZyb20gOiAnJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodHlwZW9mIGV4cG9ydHMgPT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gcGx1Z2luXHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcclxuICAgICAgICBkZWZpbmUoW10sIGZ1bmN0aW9uKCl7IHJldHVybiBwbHVnaW4gfSlcclxuICAgIH0gZWxzZSBpZiAod2luZG93LlZ1ZSkge1xyXG4gICAgICAgIFZ1ZS51c2UocGx1Z2luKVxyXG4gICAgfVxyXG5cclxufSkoKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1311\n")}}]);